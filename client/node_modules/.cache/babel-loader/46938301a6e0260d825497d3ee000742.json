{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\SudokuReact\\\\src\\\\components\\\\Game\\\\GridComponents\\\\LogicContainers.js\";\nimport React from 'react';\nimport classes from '../../../CSS/GameStyle.module.css';\n\nconst LogicContainers = props => {\n  let pushpuzzle = /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.GameComp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, props.Data.map((val, index) => {\n    let status = null;\n    let color = null;\n    let inputValue = null;\n\n    if (val != 0) {\n      inputValue = val;\n    }\n\n    if (val == 0 || typeof val == \"string\") {\n      status = \"dynamic\";\n      color = \"#08f7be\";\n    } else {\n      status = \"static\";\n    }\n\n    if (props.start) {} else {\n      inputValue = \" \";\n      status = \"static\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      status: status,\n      id: index,\n      onClick: event => {\n        props.PadHandler(event, status, props.Sector, index);\n      },\n      style: {\n        color: `${color}`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, inputValue);\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, pushpuzzle);\n};\n\nexport default LogicContainers;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/SudokuReact/src/components/Game/GridComponents/LogicContainers.js"],"names":["React","classes","LogicContainers","props","pushpuzzle","GameComp","Data","map","val","index","status","color","inputValue","start","event","PadHandler","Sector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mCAApB;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAG;AAE5B,MAAIC,UAAU,gBACV;AAAI,IAAA,SAAS,EAAEH,OAAO,CAACI,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKF,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAKC,KAAL,KAAa;AACzB,QAAIC,MAAM,GAAG,IAAb;AACA,QAAIC,KAAK,GAAG,IAAZ;AACA,QAAIC,UAAU,GAAG,IAAjB;;AACA,QAAGJ,GAAG,IAAG,CAAT,EAAW;AACPI,MAAAA,UAAU,GAAGJ,GAAb;AACH;;AACD,QAAGA,GAAG,IAAE,CAAL,IAAQ,OAAOA,GAAP,IAAc,QAAzB,EAAkC;AAC9BE,MAAAA,MAAM,GAAG,SAAT;AACAC,MAAAA,KAAK,GAAG,SAAR;AACH,KAHD,MAII;AACAD,MAAAA,MAAM,GAAG,QAAT;AACH;;AACD,QAAGP,KAAK,CAACU,KAAT,EAAe,CAEd,CAFD,MAGI;AACAD,MAAAA,UAAU,GAAG,GAAb;AACAF,MAAAA,MAAM,GAAG,QAAT;AACH;;AAIL,wBACI;AAAI,MAAA,GAAG,EAAED,KAAT;AAAgB,MAAA,MAAM,EAAEC,MAAxB;AAAgC,MAAA,EAAE,EAAED,KAApC;AAA2C,MAAA,OAAO,EAAGK,KAAD,IAAS;AAACX,QAAAA,KAAK,CAACY,UAAN,CAAiBD,KAAjB,EAAuBJ,MAAvB,EAA+BP,KAAK,CAACa,MAArC,EAA4CP,KAA5C;AAAmD,OAAjH;AAAmH,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAE,GAAEA,KAAM;AAAhB,OAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgJC,UAAhJ,CADJ;AAGC,GA3BA,CAFL,CADJ;AAkCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,UADL,CADJ;AAOH,CA3CD;;AA4CA,eAAeF,eAAf","sourcesContent":["import React from 'react';\nimport classes from '../../../CSS/GameStyle.module.css'\nconst LogicContainers = props =>{\n    \n    let pushpuzzle = (\n        <ul className={classes.GameComp} >\n            \n            {props.Data.map((val,index)=>{\n                let status = null;\n                let color = null;\n                let inputValue = null\n                if(val!= 0){\n                    inputValue = val\n                }\n                if(val==0||typeof val == \"string\"){\n                    status = \"dynamic\"\n                    color = \"#08f7be\"\n                }\n                else{\n                    status = \"static\"\n                }\n                if(props.start){\n                    \n                }\n                else{\n                    inputValue = \" \"\n                    status = \"static\"\n                }\n                \n            \n                \n            return(\n                <li key={index} status={status} id={index} onClick={(event)=>{props.PadHandler(event,status, props.Sector,index)}} style={{color:`${color}`}} >{inputValue}</li>\n                )\n            })}\n            \n        </ul>\n    )\n    return(\n        <div>\n            {pushpuzzle}\n            \n        </div>\n    )\n\n}\nexport default LogicContainers;"]},"metadata":{},"sourceType":"module"}
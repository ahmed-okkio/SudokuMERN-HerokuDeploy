{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\Sudoku-Deploy\\\\src\\\\components\\\\Login\\\\LoginHandling.js\";\nimport React, { useState, useEffect } from 'react';\nimport fire from './fire';\nimport LoginWindow from './LoginWindow';\nimport { Redirect } from 'react-router-dom';\nimport LoginData from '../../Assets/LoginData.json';\n\nconst LoginHandling = () => {\n  const [user, setUser] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConf, setPasswordConf] = useState('');\n  const [passwordConfError, setPasswordConfError] = useState('');\n  const [userNameError, setuserNameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const clearInputs = () => {\n    setUsername('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setuserNameError('');\n    setPasswordError('');\n  };\n\n  const loginHandler = () => {\n    clearErrors('');\n\n    for (let i = 0; i < LoginData.length; i++) {\n      if (username == LoginData[i][\"username\"] && password == LoginData[i][\"password\"]) {\n        console.log(\"Logged In\");\n      }\n    } // fire\n    //     .auth()\n    //     .signInWithEmailAndPassword(username+\"@sudokureact.com\", password)\n    //     .catch(err => {\n    //         switch (err.code) {\n    //                 case \"auth/invalid\":\n    //                 case \"auth/user-disabled\":\n    //                 case \"auth/user-not-found\":\n    //                 setuserNameError(err.message);\n    //                 break;\n    //             case \"auth/wrong-password\":\n    //                 setPasswordError(err.message);\n    //                 break;\n    //         }\n    //     })\n\n  };\n\n  const signupHandler = () => {\n    clearErrors();\n\n    if (password == passwordConf) {\n      fire.auth().createUserWithEmailAndPassword(username + \"@sudokureact.com\", password).then(cred => {\n        return fire.firestore().collection('users-history').doc(username).set({\n          highScore: 0\n        });\n      }, err => {\n        switch (err.code) {\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-user\":\n            setuserNameError(err.message);\n            break;\n\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n    } else {\n      setPasswordConfError('Please make sure both passwords match');\n    }\n  };\n\n  const logOutHandler = () => {\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser('');\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, user ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(LoginWindow, {\n    username: username,\n    setUsername: setUsername,\n    password: password,\n    setPassword: setPassword,\n    setPasswordConf: setPasswordConf,\n    loginHandler: loginHandler,\n    signupHandler: signupHandler,\n    userNameError: userNameError,\n    passwordError: passwordError,\n    passwordConfError: passwordConfError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default LoginHandling;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/Sudoku-Deploy/src/components/Login/LoginHandling.js"],"names":["React","useState","useEffect","fire","LoginWindow","Redirect","LoginData","LoginHandling","user","setUser","username","setUsername","password","setPassword","passwordConf","setPasswordConf","passwordConfError","setPasswordConfError","userNameError","setuserNameError","passwordError","setPasswordError","clearInputs","clearErrors","loginHandler","i","length","console","log","signupHandler","auth","createUserWithEmailAndPassword","then","cred","firestore","collection","doc","set","highScore","err","code","message","logOutHandler","signOut","authListener","onAuthStateChanged"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport fire from './fire';\r\nimport LoginWindow from './LoginWindow';\r\nimport { Redirect } from 'react-router-dom';\r\nimport LoginData from '../../Assets/LoginData.json'\r\n\r\n\r\nconst LoginHandling = () => {\r\n    const [user, setUser] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConf, setPasswordConf] = useState('');\r\n    const [passwordConfError, setPasswordConfError] = useState('');\r\n    const [userNameError, setuserNameError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const clearInputs = () => {\r\n        setUsername('');\r\n        setPassword('');\r\n    }\r\n    const clearErrors = () => {\r\n        setuserNameError('');\r\n        setPasswordError('');\r\n    }\r\n    const loginHandler = () => {\r\n        clearErrors('');\r\n        for(let i = 0;i<LoginData.length;i++){\r\n            if(username == LoginData[i][\"username\"] \r\n            && password == LoginData[i][\"password\"]){\r\n                console.log(\"Logged In\")\r\n            }\r\n        }\r\n        \r\n        // fire\r\n        //     .auth()\r\n        //     .signInWithEmailAndPassword(username+\"@sudokureact.com\", password)\r\n        //     .catch(err => {\r\n        //         switch (err.code) {\r\n        //                 case \"auth/invalid\":\r\n        //                 case \"auth/user-disabled\":\r\n        //                 case \"auth/user-not-found\":\r\n        //                 setuserNameError(err.message);\r\n        //                 break;\r\n        //             case \"auth/wrong-password\":\r\n        //                 setPasswordError(err.message);\r\n        //                 break;\r\n        //         }\r\n        //     })\r\n    }\r\n\r\n    const signupHandler = () => {\r\n        clearErrors();\r\n        if(password == passwordConf){\r\n            fire\r\n                .auth()\r\n                .createUserWithEmailAndPassword(username+\"@sudokureact.com\", password)\r\n                .then(cred => {\r\n                    return fire.firestore().collection('users-history').doc(username).set({highScore:0})\r\n                },err=>{\r\n                    switch (err.code) {\r\n                        case \"auth/email-already-in-use\":\r\n                        case \"auth/invalid-user\":\r\n                            setuserNameError(err.message);\r\n                            break;\r\n                        case \"auth/weak-password\":\r\n                            setPasswordError(err.message);\r\n                            break;                       \r\n                    }\r\n                })\r\n            }\r\n        else{\r\n            setPasswordConfError('Please make sure both passwords match')\r\n        }\r\n    }\r\n    const logOutHandler = () => {\r\n        fire.auth().signOut();\r\n    }\r\n    const authListener = () => {\r\n        fire.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                clearInputs();\r\n                setUser(user);\r\n            }\r\n            else {\r\n                setUser('');\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        authListener();\r\n    }, [])\r\n    return (\r\n        <>\r\n            {user ?(\r\n                <Redirect to=\"/\"/>\r\n                ):(\r\n                <LoginWindow\r\n                    username={username}\r\n                    setUsername={setUsername}\r\n                    password={password}\r\n                    setPassword={setPassword}\r\n                    setPasswordConf={setPasswordConf}\r\n                    loginHandler={loginHandler}\r\n                    signupHandler={signupHandler}\r\n                    userNameError={userNameError}\r\n                    passwordError={passwordError}\r\n                    passwordConfError={passwordConfError}\r\n                />)\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default LoginHandling"]},"metadata":{},"sourceType":"module"}
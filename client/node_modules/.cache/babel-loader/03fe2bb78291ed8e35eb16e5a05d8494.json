{"ast":null,"code":"import _defineProperty from\"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\Sudoku-Deploy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\Sudoku-Deploy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import classes from'../../CSS/GameStyle.module.css';import LogicContainers from'./GridComponents/LogicContainers';import GridOverlay from'./GridComponents/GridOverlay';import InputPad from'./GridComponents/Input';import padContext from'../Context/Pad-context';import Solve from'../Buttons/Solve';import Finish from'../Buttons/Finish';import puzzleData from'../../Assets/data.json';import fire from'../Login/fire';import{useHistory}from'react-router-dom';var Game=function Game(props){var _useState=useState({showPad:false,Xcoords:null,Ycoords:null,cellindex:null}),_useState2=_slicedToArray(_useState,2),inputPadState=_useState2[0],setInputPadState=_useState2[1];var _useState3=useState({R1:[null,null,null,null,null,null,null,null,null],R2:[null,null,null,null,null,null,null,null,null],R3:[null,null,null,null,null,null,null,null,null],R4:[null,null,null,null,null,null,null,null,null],R5:[null,null,null,null,null,null,null,null,null],R6:[null,null,null,null,null,null,null,null,null],R7:[null,null,null,null,null,null,null,null,null],R8:[null,null,null,null,null,null,null,null,null],R9:[null,null,null,null,null,null,null,null,null]}),_useState4=_slicedToArray(_useState3,2),ActivePuzzle=_useState4[0],SetPuzzle=_useState4[1];var _useState5=useState({complete:0}),_useState6=_slicedToArray(_useState5,2),puzzCompState=_useState6[0],setPuzzComp=_useState6[1];var _useState7=useState({trigger:false,state:false}),_useState8=_slicedToArray(_useState7,2),triggerCheck=_useState8[0],setTrigger=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),puzzleCorrect=_useState10[0],setPuzzleCorrect=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),puzzleID=_useState12[0],setPuzzleID=_useState12[1];var puzzleFinish=function puzzleFinish(){var temp=0;Object.keys(ActivePuzzle).map(function(Sector,key){for(var i=0;i<ActivePuzzle[Sector].length;i++){var row=ActivePuzzle[Sector][i];if(row!==0&&row!==null){temp++;}}});setPuzzComp({complete:temp});var temp2=triggerCheck.trigger;setTrigger({trigger:!temp2,state:true});};var PadHandler=function PadHandler(event,stat,Sector,index){if(inputPadState.showPad||stat==\"static\"){setInputPadState({showPad:false});}else{setInputPadState({showPad:true,Xcoords:event.clientX,Ycoords:event.clientY,cellindex:index,Sector:Sector});}};var InputHandler=function InputHandler(padinput){var Tempstate=ActivePuzzle;Tempstate[inputPadState.Sector][inputPadState.cellindex]=padinput.toString();SetPuzzle(Tempstate);setInputPadState({showPad:false});};var history=useHistory();var endPuzzle=function endPuzzle(){setPuzzleCorrect(true);props.gameHandler();// \n};var inputmenu=null;if(inputPadState.showPad){inputmenu=/*#__PURE__*/React.createElement(InputPad,{InputHandler:InputHandler,Ycoords:inputPadState.Ycoords,Xcoords:inputPadState.Xcoords});}var togglePad=function togglePad(){if(inputPadState.showPad){setInputPadState({showPad:false});}};var GameComponents=/*#__PURE__*/React.createElement(\"div\",null,Object.keys(ActivePuzzle).map(function(Sector,key){return/*#__PURE__*/React.createElement(LogicContainers,Object.assign({start:props.gameState},inputPadState,{PadHandler:PadHandler,Data:ActivePuzzle[Sector],Sector:Sector,key:key}));}));var PuzzleLoader=function PuzzleLoader(){var tempcounter=0;var RawPuzzle=null;var i=Math.floor(Math.random()*500+1);RawPuzzle=puzzleData[i][\"puzzle\"].toString();setPuzzleID(RawPuzzle.substring(0,6));var PuzzProcess=RawPuzzle.split(\"\");var ReadyPuzz={R1:[],R2:[],R3:[],R4:[],R5:[],R6:[],R7:[],R8:[],R9:[]};for(var n=1;n<10;n++){for(var _i=0;_i<9;_i++){ReadyPuzz[\"R\"+n].push(parseInt(PuzzProcess[tempcounter]));tempcounter++;}}SetPuzzle(ReadyPuzz);};useEffect(function(){if(props.gameState){PuzzleLoader();}},[props.gameState]);useEffect(function(){if(puzzleCorrect){fire.auth().onAuthStateChanged(function(user){if(user!=null){return fire.firestore().collection('users-history').doc(user.email).get().then(function(doc){var _fire$firestore$colle;fire.firestore().collection('users-history').doc(user.email).update((_fire$firestore$colle={},_defineProperty(_fire$firestore$colle,puzzleID,parseInt(1000/props.score)),_defineProperty(_fire$firestore$colle,\"highScore\",doc.data().highScore+parseInt(1000/props.score)),_fire$firestore$colle));}).then(function(){history.push(\"/Complete\");});}else{history.push(\"/Complete\");}});}},[props.score]);var StartFin=/*#__PURE__*/React.createElement(Solve,{onClick:props.gameHandler,gameState:props.gameState});if(props.gameState){StartFin=/*#__PURE__*/React.createElement(Finish,{onClick:puzzleFinish,endPuzzle:endPuzzle,triggstate:triggerCheck.state,trigger:triggerCheck.trigger,puzzleComplete:puzzCompState.complete,Puzzle:ActivePuzzle,score:props.score});}return/*#__PURE__*/React.createElement(\"div\",{className:classes.gamePage,onClick:togglePad},/*#__PURE__*/React.createElement(\"div\",{className:classes.GameStyleContainer},/*#__PURE__*/React.createElement(GridOverlay,null),/*#__PURE__*/React.createElement(padContext.Provider,{value:{showPad:inputPadState.showPad,PadHandler:PadHandler}},/*#__PURE__*/React.createElement(\"div\",{className:classes.GameContainer},GameComponents))),inputmenu,StartFin);};export default Game;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/Sudoku-Deploy/src/components/Game/Game.js"],"names":["React","useState","useEffect","classes","LogicContainers","GridOverlay","InputPad","padContext","Solve","Finish","puzzleData","fire","useHistory","Game","props","showPad","Xcoords","Ycoords","cellindex","inputPadState","setInputPadState","R1","R2","R3","R4","R5","R6","R7","R8","R9","ActivePuzzle","SetPuzzle","complete","puzzCompState","setPuzzComp","trigger","state","triggerCheck","setTrigger","puzzleCorrect","setPuzzleCorrect","puzzleID","setPuzzleID","puzzleFinish","temp","Object","keys","map","Sector","key","i","length","row","temp2","PadHandler","event","stat","index","clientX","clientY","InputHandler","padinput","Tempstate","toString","history","endPuzzle","gameHandler","inputmenu","togglePad","GameComponents","gameState","PuzzleLoader","tempcounter","RawPuzzle","Math","floor","random","substring","PuzzProcess","split","ReadyPuzz","n","push","parseInt","auth","onAuthStateChanged","user","firestore","collection","doc","email","get","then","update","score","data","highScore","StartFin","gamePage","GameStyleContainer","GameContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport classes from '../../CSS/GameStyle.module.css';\r\nimport LogicContainers from './GridComponents/LogicContainers';\r\nimport GridOverlay  from './GridComponents/GridOverlay';\r\nimport InputPad from './GridComponents/Input';\r\nimport padContext from '../Context/Pad-context';\r\nimport Solve from '../Buttons/Solve';\r\nimport Finish from'../Buttons/Finish';\r\nimport puzzleData from '../../Assets/data.json';\r\nimport fire from '../Login/fire';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Game = (props) =>{\r\n    const [inputPadState,setInputPadState] = useState({\r\n        showPad:false,\r\n        Xcoords: null,\r\n        Ycoords:null,\r\n        cellindex: null\r\n    })\r\n    const  [ActivePuzzle,SetPuzzle] = useState({\r\n        R1:[null,null,null,null,null,null,null,null,null],\r\n        R2:[null,null,null,null,null,null,null,null,null],\r\n        R3:[null,null,null,null,null,null,null,null,null],\r\n        R4:[null,null,null,null,null,null,null,null,null],\r\n        R5:[null,null,null,null,null,null,null,null,null],\r\n        R6:[null,null,null,null,null,null,null,null,null],\r\n        R7:[null,null,null,null,null,null,null,null,null],\r\n        R8:[null,null,null,null,null,null,null,null,null],\r\n        R9:[null,null,null,null,null,null,null,null,null]});\r\n    const [puzzCompState,setPuzzComp] = useState({complete:0});\r\n    const [triggerCheck,setTrigger] = useState({trigger:false,state:false});\r\n    const [puzzleCorrect,setPuzzleCorrect] = useState(false);\r\n    const [puzzleID,setPuzzleID] = useState('');\r\n    const puzzleFinish =()=>{\r\n        let temp = 0\r\n        Object.keys(ActivePuzzle).map((Sector,key)=>{\r\n            for(let i = 0;i<ActivePuzzle[Sector].length;i++){\r\n                let row = ActivePuzzle[Sector][i]\r\n                if(row !== 0 && row !== null){\r\n                    temp++\r\n                    \r\n                }\r\n            }\r\n        })\r\n        setPuzzComp({complete:temp})\r\n        let temp2 = triggerCheck.trigger\r\n        setTrigger({trigger:!temp2,\r\n            state:true\r\n        })\r\n    }  \r\n    const PadHandler =(event, stat, Sector,index)=>{\r\n        if(inputPadState.showPad||stat==\"static\"){\r\n            setInputPadState({\r\n                showPad:false\r\n            });\r\n        }\r\n        else{    \r\n            setInputPadState({\r\n                showPad:true,\r\n                Xcoords: event.clientX,\r\n                Ycoords: event.clientY,\r\n                cellindex: index,\r\n                Sector: Sector\r\n            })\r\n        }\r\n    }\r\n    const InputHandler=(padinput)=>{\r\n        let Tempstate = ActivePuzzle\r\n        Tempstate[inputPadState.Sector][inputPadState.cellindex]= padinput.toString()\r\n\r\n        SetPuzzle(Tempstate)\r\n        setInputPadState({\r\n            showPad:false\r\n        })\r\n \r\n    }\r\n    let history = useHistory();\r\n    const endPuzzle=()=>{\r\n        setPuzzleCorrect(true)\r\n        props.gameHandler()\r\n        // \r\n       \r\n    }\r\n    let inputmenu = null;\r\n    if(inputPadState.showPad){\r\n        inputmenu = (\r\n        <InputPad InputHandler={InputHandler}Ycoords={inputPadState.Ycoords} Xcoords={inputPadState.Xcoords}/>\r\n        );\r\n    }\r\n    const togglePad=()=>{\r\n        if(inputPadState.showPad){\r\n            setInputPadState({showPad:false})\r\n    }\r\n    }\r\n    \r\n    \r\n    \r\n    let   GameComponents = (\r\n        <div >\r\n            {Object.keys(ActivePuzzle).map((Sector,key)=>{\r\n                return(\r\n                    <LogicContainers start={props.gameState} {...inputPadState} PadHandler={PadHandler}Data={ActivePuzzle[Sector]} Sector={Sector}key={key}/>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n    const PuzzleLoader = ()=>{\r\n        let tempcounter = 0\r\n        let RawPuzzle  = null;\r\n        let i = Math.floor((Math.random() * 500) + 1)\r\n        RawPuzzle = puzzleData[i][\"puzzle\"].toString()\r\n        setPuzzleID(RawPuzzle.substring(0,6))\r\n        let PuzzProcess = RawPuzzle.split(\"\")\r\n        let ReadyPuzz ={\r\n            R1:[],\r\n            R2:[],\r\n            R3:[],\r\n            R4:[],\r\n            R5:[],\r\n            R6:[],\r\n            R7:[],\r\n            R8:[],\r\n            R9:[]}  \r\n        for(let n = 1; n <10;n++){    \r\n            for(let i =0;i<9;i++){\r\n                ReadyPuzz[\"R\"+n].push(parseInt(PuzzProcess[tempcounter]))\r\n                tempcounter++ \r\n              }           \r\n          }\r\n        SetPuzzle(ReadyPuzz)\r\n    }\r\n    useEffect(()=>{\r\n        if(props.gameState){\r\n        PuzzleLoader()\r\n    }\r\n    \r\n    },[props.gameState])\r\n    useEffect(()=>{\r\n        if(puzzleCorrect){\r\n            fire.auth().onAuthStateChanged(user => {\r\n                if(user != null){\r\n                    return fire.firestore().collection('users-history').doc(user.email)\r\n                \r\n                .get()\r\n                .then((doc)=>{\r\n                    fire.firestore().collection('users-history').doc(user.email)\r\n                    .update({\r\n                        [puzzleID]:parseInt(1000 / props.score),\r\n                        highScore:doc.data().highScore+parseInt(1000 / props.score)\r\n                        \r\n                })\r\n            }).then(()=>{\r\n                history.push(\"/Complete\")\r\n            })\r\n        }\r\n    else{\r\n        history.push(\"/Complete\")\r\n    }})\r\n    }\r\n    },[props.score])\r\n    let StartFin = <Solve onClick={props.gameHandler} gameState={props.gameState}></Solve>\r\n    if(props.gameState){\r\n      StartFin= <Finish \r\n        onClick={puzzleFinish}\r\n        endPuzzle={endPuzzle}\r\n        triggstate={triggerCheck.state}\r\n        trigger={triggerCheck.trigger}\r\n        puzzleComplete={puzzCompState.complete}\r\n        Puzzle={ActivePuzzle}\r\n        score={props.score}/>\r\n    }\r\n    return(\r\n        <div className={classes.gamePage} onClick={togglePad}>\r\n            \r\n            <div className={classes.GameStyleContainer} >\r\n                <GridOverlay/>\r\n                <padContext.Provider value={{showPad: inputPadState.showPad, PadHandler:PadHandler}}>\r\n                <div className={classes.GameContainer}>\r\n                    {GameComponents}\r\n                </div>\r\n                </padContext.Provider>\r\n            </div>\r\n            {inputmenu}\r\n            {StartFin}\r\n        </div>\r\n    )\r\n};\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}
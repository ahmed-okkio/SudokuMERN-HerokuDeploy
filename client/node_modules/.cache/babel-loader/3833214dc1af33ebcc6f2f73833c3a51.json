{"ast":null,"code":"import _slicedToArray from\"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\Sudoku-Deploy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import classes from'../../CSS/Main.module.css';var Finish=function Finish(props){var _useState=useState({BttnCol:\"\"}),_useState2=_slicedToArray(_useState,2),BttnStyle=_useState2[0],setBttnStyle=_useState2[1];var solvePuzzle=function solvePuzzle(Puzzle){var dupeCheck=[];for(var n=1;n<10;n++){for(var i=0;i<9;i++){for(var m=i+1;m<9;m++){//Horizontal Check\nif(Puzzle[\"R\"+n][i]==Puzzle[\"R\"+n][m]){// console.log(Puzzle[\"R\" + n][i], Puzzle[\"R\" + n][m])  //\nreturn false;//\n}}}}for(var _i=0;_i<9;_i++){for(var _n=1;_n<9;_n++){for(var _m=_n+1;_m<9;_m++){if(Puzzle[\"R\"+_n][_i]==Puzzle[\"R\"+_m][_i]){// console.log(Puzzle[\"R\" + n][i], Puzzle[\"R\" + (m)][i])\nreturn false;}}}}for(var x=0;x<9;x+=3){for(var t=0;t<9;t+=3){//SubGrid Check\nfor(var _n2=1;_n2<4;_n2++){for(var p=0;p<3;p++){for(var _i2=1;_i2<4;_i2++){for(var _m2=0;_m2<3;_m2++){// console.log(\"Puzzle[R\" + (n + x) + \"][\" + (p + t) + \"]\" + \"==\" + \"Puzzle[R\" + (i + x) + \"][\" + (m + t) + \"]\")\nif(Puzzle[\"R\"+(_n2+x)][p+t]==Puzzle[\"R\"+(_i2+x)][_m2+t]){dupeCheck.push(Puzzle[\"R\"+_i2][_m2]);}}}}}}}if(dupeCheck.length!==81){return false;}return true;};var Button=/*#__PURE__*/React.createElement(\"button\",{onClick:props.onClick,className:classes.Solvebtn,style:{backgroundColor:BttnStyle.BttnCol}},\"FINISH\");useEffect(function(){if(props.triggstate){if(props.Puzzle==null||props.puzzleComplete!==81){setBttnStyle({BttnCol:\"#ff3363\"});setTimeout(function(){setBttnStyle({});},700);}else{if(solvePuzzle(props.Puzzle)){return props.endPuzzle();}else{setBttnStyle({BttnCol:\"#ff3363\"});setTimeout(function(){setBttnStyle({});},700);}}}},[props.trigger,props.score]);return/*#__PURE__*/React.createElement(\"div\",{className:classes.PageBtns},Button);};export default Finish;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/Sudoku-Deploy/src/components/Buttons/Finish.js"],"names":["React","useState","useEffect","classes","Finish","props","BttnCol","BttnStyle","setBttnStyle","solvePuzzle","Puzzle","dupeCheck","n","i","m","x","t","p","push","length","Button","onClick","Solvebtn","backgroundColor","triggstate","puzzleComplete","setTimeout","endPuzzle","trigger","score","PageBtns"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport classes from '../../CSS/Main.module.css'\r\n\r\n\r\n\r\nconst Finish = (props) => {\r\n    const [BttnStyle, setBttnStyle] = useState({\r\n        BttnCol: \"\"\r\n    })\r\n    const solvePuzzle = (Puzzle) => {\r\n        let dupeCheck = []\r\n        for (let n = 1; n < 10; n++) {\r\n            for (let i = 0; i < 9; i++) {\r\n                for (let m = i + 1; m < 9; m++) {                       //Horizontal Check\r\n                    if (Puzzle[\"R\" + n][i] == Puzzle[\"R\" + n][m]) {\r\n                        // console.log(Puzzle[\"R\" + n][i], Puzzle[\"R\" + n][m])  //\r\n                        return false             //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            for (let n = 1; n < 9; n++) {\r\n                for (let m = n + 1; m < 9; m++) {\r\n                    if (Puzzle[\"R\" + n][i] == Puzzle[\"R\" + (m)][i]) {\r\n                        // console.log(Puzzle[\"R\" + n][i], Puzzle[\"R\" + (m)][i])\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let x = 0; x < 9; x += 3) {\r\n            for (let t = 0; t < 9; t += 3) {                                                                                           //SubGrid Check\r\n                for (let n = 1; n < 4; n++) {\r\n                    for (let p = 0; p < 3; p++) {\r\n                        for (let i = 1; i < 4; i++) {\r\n                            for (let m = 0; m < 3; m++) {\r\n                                // console.log(\"Puzzle[R\" + (n + x) + \"][\" + (p + t) + \"]\" + \"==\" + \"Puzzle[R\" + (i + x) + \"][\" + (m + t) + \"]\")\r\n                                if (Puzzle[\"R\" + (n + x)][p + t] == Puzzle[\"R\" + (i + x)][m + t]) {\r\n                                    dupeCheck.push(Puzzle[\"R\" + i][m])\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (dupeCheck.length !== 81) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    \r\n    let Button = (<button onClick={props.onClick} className={classes.Solvebtn} style={{ backgroundColor: BttnStyle.BttnCol }}>FINISH</button>)\r\n    \r\n    useEffect(() => {\r\n        if (props.triggstate) {\r\n            if (props.Puzzle == null || props.puzzleComplete !== 81) {\r\n                setBttnStyle({ BttnCol: \"#ff3363\" })\r\n                setTimeout(() => {\r\n                    setBttnStyle({})\r\n                }, 700)\r\n            }\r\n            else {\r\n                if (solvePuzzle(props.Puzzle)) {\r\n                     return(props.endPuzzle()) \r\n                }\r\n                \r\n                else {\r\n                    setBttnStyle({ BttnCol: \"#ff3363\" })\r\n                    setTimeout(() => {\r\n                        setBttnStyle({})\r\n                    }, 700)\r\n                }\r\n            }\r\n        }\r\n    }, [props.trigger,props.score])\r\n    return (\r\n        <div className={classes.PageBtns}>\r\n            {Button}\r\n        </div>\r\n    )\r\n}\r\nexport default Finish;"]},"metadata":{},"sourceType":"module"}
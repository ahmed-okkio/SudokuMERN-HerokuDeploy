{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\Sudoku-Deploy\\\\src\\\\components\\\\Navbar\\\\Navbar.js\";\nimport React, { useState, useEffect } from 'react';\nimport classes from '../../CSS/Main.module.css';\nimport Logo from '../../Assets/Navbar/Logo.png';\nimport Progress from './LoadingElem';\nimport { NavLink } from 'react-router-dom';\nimport fire from '../Login/fire';\nimport { getFromStorage, setInStorage } from '../utils/localstorage';\nimport { Verify, Logout, retreiveUser } from '../utils/requests';\n\nconst Navbar = props => {\n  const [user, setUser] = useState(''); //Authentication USER DATA holding state\n\n  const [loadState, setloadState] = useState({\n    // Holds state responsible for nav loading animation on first load\n    loadprog: 0,\n    opacity: 0\n  });\n  const [burgerState, setBurgerState] = useState(''); // Holds state responsible for displaying Burger icon on mobile navbar\n\n  const [navHeightState, setNavHeightState] = useState(''); // Holds state responsible for expanding nav bar height down on burger button press\n\n  const [navOpacityState, setNavOpacityState] = useState();\n\n  const toggleBurger = () => {\n    // Toggle for pressing burger button -> reveals nav buttons\n    if (burgerState == '' || burgerState == 'none') {\n      setNavHeightState(220);\n      setBurgerState('flex');\n      setTimeout(() => {\n        setNavOpacityState(1);\n      }, 200);\n    } else {\n      setNavOpacityState(0);\n      setNavHeightState(60);\n      setBurgerState('none');\n    }\n  };\n\n  const LoadPage = () => {\n    // Trigger for loading animation on Navbar\n    let mediaquery = window.matchMedia(\"(max-width:960px)\");\n\n    if (mediaquery.matches) {\n      setNavHeightState(60);\n      setBurgerState('none');\n    }\n\n    setloadState({\n      loadprog: 0,\n      opacity: 0\n    });\n    setTimeout(() => {\n      setloadState({\n        loadprog: 70,\n        opacity: 1\n      });\n    }, 50);\n    setTimeout(() => {\n      setloadState({\n        loadprog: 100\n      });\n    }, 300);\n    setTimeout(() => {\n      setloadState({\n        loadprog: 101,\n        opacity: 0\n      });\n    }, 1500);\n    setTimeout(() => {\n      setloadState({\n        loadprog: 0\n      });\n    }, 1700);\n  };\n\n  const logOutHandlerMongo = () => {\n    Logout(user);\n    setUser('');\n  };\n\n  const tokenVerify = () => {\n    const obj = getFromStorage('sudoku_react');\n\n    if (obj && obj.token) {\n      const {\n        token\n      } = obj;\n      Verify(token).then(res => {\n        if (res.data.success) {\n          setUser(token);\n          console.log(res.data);\n        } else {\n          setUser('');\n        }\n      });\n    }\n  };\n\n  const updateUserInfo = token => {\n    retreiveUser(token).then(res => {\n      console.log(res);\n    });\n  }; // const logOutHandlerFirebase = () => {\n  //     console.log()\n  //     fire.auth().signOut();\n  //     setUser('');\n  //     LoadPage();\n  // }\n  // const authListener = () => {\n  //     fire.auth().onAuthStateChanged(user => {\n  //         if (user) {\n  //             setUser(user);\n  //         }\n  //         else {\n  //             setUser('');\n  //         }\n  //     })\n  // }\n\n\n  useEffect(() => {\n    LoadPage();\n    tokenVerify(); // authListener();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"nav\", {\n    className: classes.NavbarBody,\n    style: {\n      height: `${navHeightState}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.Logo,\n    src: Logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.NavButtons,\n    style: {\n      display: `${burgerState}`,\n      opacity: `${navOpacityState}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.NavButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: LoadPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/Game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 50\n    }\n  }, \"PLAY\"))), /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.NavButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: LoadPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/Rankings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 50\n    }\n  }, \"RANKINGS\")))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.NavButtonLogin,\n    style: {\n      display: `${burgerState}`,\n      opacity: `${navOpacityState}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, user ? /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.NavButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: logOutHandlerMongo,\n    to: \"/Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"  LOGOUT\")) : /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.NavButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: LoadPage,\n    to: \"/Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, \"LOGIN\"))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.toggleBurger,\n    onClick: toggleBurger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Progress, {\n    opacity: loadState.opacity,\n    complete: loadState.loadprog,\n    loadbar: loadState.loadprog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/Sudoku-Deploy/src/components/Navbar/Navbar.js"],"names":["React","useState","useEffect","classes","Logo","Progress","NavLink","fire","getFromStorage","setInStorage","Verify","Logout","retreiveUser","Navbar","props","user","setUser","loadState","setloadState","loadprog","opacity","burgerState","setBurgerState","navHeightState","setNavHeightState","navOpacityState","setNavOpacityState","toggleBurger","setTimeout","LoadPage","mediaquery","window","matchMedia","matches","logOutHandlerMongo","tokenVerify","obj","token","then","res","data","success","console","log","updateUserInfo","NavbarBody","height","NavButtons","display","NavButton","NavButtonLogin","bar"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport classes from '../../CSS/Main.module.css'\r\nimport Logo from '../../Assets/Navbar/Logo.png'\r\nimport Progress from './LoadingElem';\r\nimport { NavLink } from 'react-router-dom';\r\nimport fire from '../Login/fire';\r\nimport { getFromStorage, setInStorage } from '../utils/localstorage';\r\nimport { Verify, Logout, retreiveUser } from '../utils/requests';\r\n\r\nconst Navbar = props => {\r\n    const [user, setUser] = useState('');                           //Authentication USER DATA holding state\r\n    const [loadState, setloadState] = useState({                    // Holds state responsible for nav loading animation on first load\r\n        loadprog: 0,\r\n        opacity: 0\r\n    });\r\n    const [burgerState, setBurgerState] = useState('');             // Holds state responsible for displaying Burger icon on mobile navbar\r\n    const [navHeightState, setNavHeightState] = useState('');       // Holds state responsible for expanding nav bar height down on burger button press\r\n    const [navOpacityState, setNavOpacityState] = useState();\r\n    const toggleBurger = () => {                                    // Toggle for pressing burger button -> reveals nav buttons\r\n        if (burgerState == '' || burgerState == 'none') {\r\n            setNavHeightState(220)\r\n            setBurgerState('flex')\r\n\r\n            setTimeout(() => {\r\n                setNavOpacityState(1)\r\n            }, 200)\r\n\r\n        }\r\n        else {\r\n            setNavOpacityState(0)\r\n            setNavHeightState(60)\r\n            setBurgerState('none')\r\n\r\n        }\r\n    }\r\n    const LoadPage = () => {                                         // Trigger for loading animation on Navbar\r\n        let mediaquery = window.matchMedia(\"(max-width:960px)\")\r\n        if (mediaquery.matches) {\r\n            setNavHeightState(60)\r\n            setBurgerState('none')\r\n        }\r\n        setloadState({\r\n            loadprog: 0,\r\n            opacity: 0\r\n        })\r\n        setTimeout(() => {\r\n            setloadState({\r\n                loadprog: 70,\r\n                opacity: 1\r\n            })\r\n        }, 50)\r\n        setTimeout(() => {\r\n            setloadState({\r\n                loadprog: 100,\r\n            })\r\n        }, 300)\r\n        setTimeout(() => {\r\n            setloadState({\r\n                loadprog: 101,\r\n                opacity: 0\r\n            })\r\n        }, 1500)\r\n        setTimeout(() => {\r\n            setloadState({\r\n                loadprog: 0,\r\n            })\r\n        }, 1700)\r\n\r\n    }\r\n    const logOutHandlerMongo = () => {\r\n        Logout(user)\r\n        setUser('')\r\n    }\r\n    const tokenVerify =() => {\r\n        const obj = getFromStorage('sudoku_react');\r\n        if (obj && obj.token) {\r\n            const { token } = obj;\r\n            Verify(token)\r\n            .then(res =>{\r\n                if(res.data.success) {\r\n                    setUser(token)\r\n                    console.log(res.data)\r\n                } else {\r\n                    setUser('')\r\n                }\r\n            });\r\n        }\r\n    };\r\n    const updateUserInfo= (token) =>{\r\n        retreiveUser(token)\r\n        .then(res =>{\r\n            console.log(res)\r\n        })\r\n    }\r\n    // const logOutHandlerFirebase = () => {\r\n    //     console.log()\r\n    //     fire.auth().signOut();\r\n    //     setUser('');\r\n    //     LoadPage();\r\n    // }\r\n    // const authListener = () => {\r\n    //     fire.auth().onAuthStateChanged(user => {\r\n    //         if (user) {\r\n    //             setUser(user);\r\n\r\n    //         }\r\n    //         else {\r\n    //             setUser('');\r\n    //         }\r\n    //     })\r\n    // }\r\n    useEffect(() => {\r\n        LoadPage();\r\n        tokenVerify();\r\n        \r\n        // authListener();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <nav className={classes.NavbarBody} style={{ height: `${navHeightState}px` }}>\r\n                <img className={classes.Logo} src={Logo} alt=\"Logo\"></img>\r\n                <ul className={classes.NavButtons} style={{ display: `${burgerState}`, opacity: `${navOpacityState}` }}>\r\n                    <li className={classes.NavButton}>\r\n                        <span onClick={LoadPage}><NavLink to=\"/Game\">PLAY</NavLink></span></li>\r\n                    <li className={classes.NavButton}>\r\n                        <span onClick={LoadPage}><NavLink to=\"/Rankings\">RANKINGS</NavLink></span></li>\r\n                </ul>\r\n                <ul className={classes.NavButtonLogin} style={{ display: `${burgerState}`, opacity: `${navOpacityState}` }}>\r\n                    {user ? (<li className={classes.NavButton}>\r\n                        <NavLink onClick={logOutHandlerMongo} to=\"/Login\">{}  LOGOUT</NavLink></li>)\r\n                        : (\r\n                            <li className={classes.NavButton}>\r\n                                <NavLink onClick={LoadPage} to=\"/Login\">LOGIN</NavLink></li>\r\n                        )}\r\n                </ul>\r\n                <ul>\r\n                    <span className={classes.toggleBurger} onClick={toggleBurger}>\r\n                        <span className={classes.bar} />\r\n                        <span className={classes.bar} />\r\n                        <span className={classes.bar} />\r\n                    </span>\r\n                </ul>\r\n\r\n            </nav>\r\n            <Progress opacity={loadState.opacity} complete={loadState.loadprog} loadbar={loadState.loadprog} />\r\n        </>\r\n    )\r\n};\r\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}
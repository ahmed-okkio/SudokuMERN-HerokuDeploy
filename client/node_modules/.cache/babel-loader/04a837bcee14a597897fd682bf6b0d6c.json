{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\Sudoku-Deploy\\\\src\\\\components\\\\Login\\\\LoginHandlingMongo.js\";\nimport React, { useState, useEffect } from 'react';\nimport LoginWindow from './LoginWindow';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { getFromStorage, setInStorage } from '../utils/localstorage';\nimport { Verify, Signup, Login } from '../utils/requests';\n\nconst LoginHandlingMongo = () => {\n  const [user, setUser] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConf, setPasswordConf] = useState('');\n  const [passwordConfError, setPasswordConfError] = useState('');\n  const [receiveError, setReceiveError] = useState('');\n  let userJSON = {\n    username: username,\n    password: password\n  };\n\n  const clearInputs = () => {\n    setUsername('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setReceiveError('');\n  };\n\n  const loginHandler = () => {\n    clearErrors('');\n  };\n\n  const signupHandler = () => {\n    clearErrors();\n\n    if (password == passwordConf) {\n      Signup(userJSON).then(res => {\n        if (res.data.success) {\n          Login(userJSON).then(res => {\n            if (res.data.succes) {\n              setInStorage('sudoku_react', res.data.token);\n            }\n          });\n        } else {\n          setReceiveError(res.data.message);\n        }\n      });\n    } else {\n      setPasswordConfError('Please make sure both passwords match');\n    }\n  };\n\n  const logOutHandler = () => {};\n\n  const authListener = () => {};\n\n  useEffect(() => {\n    const obj = getFromStorage('sudoku_react');\n    console.log(obj);\n\n    if (obj && obj.token) {\n      const {\n        token\n      } = obj;\n      Verify(token).then(res => {\n        if (res.success) {\n          setUser(token);\n          console.log(\"LOGGED IN\");\n        } else {\n          setUser('');\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, user ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(LoginWindow, {\n    username: username,\n    setUsername: setUsername,\n    password: password,\n    setPassword: setPassword,\n    setPasswordConf: setPasswordConf,\n    loginHandler: loginHandler,\n    signupHandler: signupHandler,\n    receiveError: receiveError,\n    passwordConfError: passwordConfError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default LoginHandlingMongo;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/Sudoku-Deploy/src/components/Login/LoginHandlingMongo.js"],"names":["React","useState","useEffect","LoginWindow","Redirect","axios","getFromStorage","setInStorage","Verify","Signup","Login","LoginHandlingMongo","user","setUser","username","setUsername","password","setPassword","passwordConf","setPasswordConf","passwordConfError","setPasswordConfError","receiveError","setReceiveError","userJSON","clearInputs","clearErrors","loginHandler","signupHandler","then","res","data","success","succes","token","message","logOutHandler","authListener","obj","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LoginWindow from './LoginWindow';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { getFromStorage, setInStorage } from '../utils/localstorage';\r\nimport { Verify, Signup, Login } from '../utils/requests';\r\nconst LoginHandlingMongo = () => {\r\n    const [user, setUser] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConf, setPasswordConf] = useState('');\r\n    const [passwordConfError, setPasswordConfError] = useState('');\r\n    const [receiveError, setReceiveError] = useState('');\r\n    let userJSON = {\r\n        username: username,\r\n        password: password\r\n    }\r\n\r\n    const clearInputs = () => {\r\n        setUsername('');\r\n        setPassword('');\r\n    }\r\n    const clearErrors = () => {\r\n        setReceiveError('');\r\n    }\r\n    const loginHandler = () => {\r\n        clearErrors('');\r\n        \r\n    }\r\n\r\n    const signupHandler = () => {\r\n        clearErrors();\r\n        if(password == passwordConf){\r\n            Signup(userJSON)\r\n            .then( res => { \r\n                if (res.data.success) {\r\n                    Login(userJSON)\r\n                    .then(res => {\r\n                        if(res.data.succes) {\r\n                            setInStorage('sudoku_react',res.data.token)\r\n                        }\r\n                    })\r\n                } else {\r\n                    setReceiveError(res.data.message)\r\n                }\r\n            });\r\n            } else {\r\n                setPasswordConfError('Please make sure both passwords match')\r\n            }\r\n        \r\n    }\r\n    const logOutHandler = () => {\r\n\r\n    }\r\n    const authListener = () => {\r\n        \r\n    }\r\n    useEffect(() => {\r\n        const obj = getFromStorage('sudoku_react');\r\n        console.log(obj)\r\n        if (obj && obj.token) {\r\n            const { token } = obj;\r\n            Verify(token)\r\n            .then(res =>{\r\n                if(res.success) {\r\n                    setUser(token)\r\n                    console.log(\"LOGGED IN\")\r\n                } else {\r\n                    setUser('')\r\n                }\r\n            })\r\n        \r\n    }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {user ?(\r\n                <Redirect to=\"/\"/>\r\n                ):(\r\n                <LoginWindow\r\n                    username={username}\r\n                    setUsername={setUsername}\r\n                    password={password}\r\n                    setPassword={setPassword}\r\n                    setPasswordConf={setPasswordConf}\r\n                    loginHandler={loginHandler}\r\n                    signupHandler={signupHandler}\r\n                    receiveError={receiveError}\r\n                    passwordConfError={passwordConfError}\r\n                />)\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default LoginHandlingMongo"]},"metadata":{},"sourceType":"module"}
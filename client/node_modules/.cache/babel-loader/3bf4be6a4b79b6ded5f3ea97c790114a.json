{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\React+Python Project\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React, { useState, useEffect } from 'react';\nimport classes from '../../CSS/GameStyle.module.css';\nimport LogicContainers from './GridComponents/LogicContainers';\nimport GridOverlay from './GridComponents/GridOverlay';\nimport InputPad from './GridComponents/Input';\nimport padContext from '../Context/Pad-context';\n\nconst Game = () => {\n  const [Padstate, setPadstate] = useState({\n    showPad: false,\n    Xcoords: null,\n    Ycoords: null,\n    cellindex: null,\n    Sector: null\n  });\n\n  const ClosePad = () => {\n    setPadstate({\n      showPad: false\n    });\n  };\n\n  const PadHandler = (event, stat, Sector, index) => {\n    if (Padstate.showPad || stat == \"static\") {\n      setPadstate({\n        showPad: false\n      });\n    } else {\n      setPadstate({\n        showPad: true,\n        Xcoords: event.clientX,\n        Ycoords: event.clientY,\n        cellindex: index,\n        Sector: Sector\n      });\n    }\n  };\n\n  const InputHandler = padinput => {\n    console.log(\"Ran\");\n    let Tempstate = ActivePuzzle;\n    let Tempsector = Padstate.Sector;\n    let Tempindex = Padstate.cellindex;\n    console.log(Padstate.cellindex);\n    Tempstate.Tempsector[Tempindex] = padinput;\n    SetPuzzle({\n      Tempstate\n    });\n  };\n\n  let inputmenu = null;\n\n  if (Padstate.showPad) {\n    inputmenu = /*#__PURE__*/React.createElement(InputPad, {\n      InputHandler: InputHandler,\n      Ycoords: Padstate.Ycoords,\n      Xcoords: Padstate.Xcoords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    });\n  }\n\n  const P1 = [[0, 2, 0, 9, 0, 0, 5, 0, 0, 9, 0, 0, 1, 0, 7, 0, 0, 6, 0, 0, 4, 3, 0, 0, 6, 0, 0, 2, 0, 8, 7, 1, 9, 0, 0, 0, 7, 4, 0, 0, 0, 5, 0, 0, 8, 3, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 3, 5, 0, 8, 6, 9, 0, 0, 4, 2, 9, 1, 0, 3, 0, 0, 8, 3, 1, 2, 5]];\n  const [ActivePuzzle, SetPuzzle] = useState({\n    R1C1: [0, 2, 0, 9, 0, 0, 5, 0, 0],\n    R1C2: [0, 2, 0, 9, 0, 0, 5, 0, 0],\n    R1C3: [0, 2, 0, 9, 0, 0, 5, 0, 0],\n    R2C1: [0, 2, 0, 9, 0, 0, null, 0, 0],\n    R2C2: [0, 2, 0, 9, 0, 0, 5, 0, 0],\n    R2C3: [0, 2, 0, 9, 0, 0, 5, 0, 0],\n    R3C1: [0, 2, 0, 9, 0, 0, 5, 0, 0],\n    R3C2: [0, 2, 0, 9, 0, 0, 5, 0, 0],\n    R3C3: [0, 2, 0, 9, 0, 0, 5, 0, 0]\n  });\n  let GameComponents = /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GameComp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, Object.keys(ActivePuzzle).map((Sector, key) => {\n    return /*#__PURE__*/React.createElement(LogicContainers, Object.assign({}, Padstate, {\n      PadHandler: PadHandler,\n      Data: ActivePuzzle[Sector],\n      Sector: Sector,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }));\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GameStyleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(padContext.Provider, {\n    value: {\n      showPad: Padstate.showPad,\n      PadHandler: PadHandler\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, GameComponents))), inputmenu);\n};\n\nexport default Game;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/React+Python Project/src/components/Game/Game.js"],"names":["React","useState","useEffect","classes","LogicContainers","GridOverlay","InputPad","padContext","Game","Padstate","setPadstate","showPad","Xcoords","Ycoords","cellindex","Sector","ClosePad","PadHandler","event","stat","index","clientX","clientY","InputHandler","padinput","console","log","Tempstate","ActivePuzzle","Tempsector","Tempindex","SetPuzzle","inputmenu","P1","R1C1","R1C2","R1C3","R2C1","R2C2","R2C3","R3C1","R3C2","R3C3","GameComponents","GameComp","Object","keys","map","key","GameStyleContainer","GameContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport classes from '../../CSS/GameStyle.module.css';\r\nimport LogicContainers from './GridComponents/LogicContainers';\r\nimport GridOverlay  from './GridComponents/GridOverlay';\r\nimport InputPad from './GridComponents/Input';\r\nimport padContext from '../Context/Pad-context';\r\nconst Game = () =>{\r\n    const [Padstate,setPadstate] = useState({\r\n        showPad:false,\r\n        Xcoords: null,\r\n        Ycoords:null,\r\n        cellindex: null,\r\n        Sector:null\r\n    })\r\n    const ClosePad = () =>{\r\n        setPadstate({\r\n            showPad:false\r\n        })\r\n    }\r\n    const PadHandler =(event, stat, Sector,index)=>{\r\n        if(Padstate.showPad||stat==\"static\"){\r\n            setPadstate({\r\n                showPad:false\r\n            });\r\n        }\r\n        else{    \r\n            setPadstate({\r\n                showPad:true,\r\n                Xcoords: event.clientX,\r\n                Ycoords: event.clientY,\r\n                cellindex: index,\r\n                Sector: Sector\r\n            })\r\n        }\r\n    }\r\n    const InputHandler=(padinput)=>{\r\n        console.log(\"Ran\")\r\n        let Tempstate = ActivePuzzle\r\n        let Tempsector= Padstate.Sector\r\n        let Tempindex = Padstate.cellindex\r\n        console.log(Padstate.cellindex)\r\n        Tempstate.Tempsector[Tempindex]= padinput\r\n        SetPuzzle({\r\n            Tempstate\r\n        })\r\n        \r\n    }\r\n    let inputmenu = null;\r\n    if(Padstate.showPad){\r\n        inputmenu = (\r\n        <InputPad InputHandler={InputHandler}Ycoords={Padstate.Ycoords} Xcoords={Padstate.Xcoords}/>\r\n        );\r\n    }\r\n    const P1 = [[0,2,0,9,0,0,5,0,0,9,0,0,1,0,7,0,0,6,0,\r\n        0,4,3,0,0,6,0,0,2,0,8,7,1,9,0,0,0,7,4,0,0,0,5,0,\r\n        0,8,3,0,0,0,6,0,0,0,0,0,1,0,5,0,0,3,5,0,8,6,9,0,0,\r\n        4,2,9,1,0,3,0,0,8,3,1,2,5]]\r\n        \r\n    \r\n\r\n\r\n    const  [ActivePuzzle,SetPuzzle] = useState({\r\n        R1C1:[0,2,0,9,0,0,5,0,0],R1C2:[0,2,0,9,0,0,5,0,0],R1C3:[0,2,0,9,0,0,5,0,0],\r\n        R2C1:[0,2,0,9,0,0,null,0,0],R2C2:[0,2,0,9,0,0,5,0,0],R2C3:[0,2,0,9,0,0,5,0,0],\r\n        R3C1:[0,2,0,9,0,0,5,0,0],R3C2:[0,2,0,9,0,0,5,0,0],R3C3:[0,2,0,9,0,0,5,0,0],});\r\n    let GameComponents = (\r\n        <div className={classes.GameComp}>\r\n            {Object.keys(ActivePuzzle).map((Sector,key)=>{\r\n                return(\r\n                    <LogicContainers {...Padstate} PadHandler={PadHandler}Data={ActivePuzzle[Sector]} Sector={Sector}key={key}/>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n    return(\r\n        <div >\r\n            <div className={classes.GameStyleContainer} >\r\n                <GridOverlay/>\r\n                <padContext.Provider value={{showPad: Padstate.showPad, PadHandler:PadHandler}}>\r\n                <div className={classes.GameContainer}>\r\n                    {GameComponents}\r\n                </div>\r\n                </padContext.Provider>\r\n            </div>\r\n            {inputmenu}\r\n        </div>\r\n    )\r\n};\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}
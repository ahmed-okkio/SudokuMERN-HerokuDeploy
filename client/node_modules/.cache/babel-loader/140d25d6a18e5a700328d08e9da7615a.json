{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\sodukoreact\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React, { useState, useEffect } from 'react';\nimport classes from '../../CSS/GameStyle.module.css';\nimport LogicContainers from './GridComponents/LogicContainers';\nimport GridOverlay from './GridComponents/GridOverlay';\n\nconst Game = () => {\n  const P1 = [[0, 2, 0, 9, 0, 0, 5, 0, 0, 9, 0, 0, 1, 0, 7, 0, 0, 6, 0, 0, 4, 3, 0, 0, 6, 0, 0, 2, 0, 8, 7, 1, 9, 0, 0, 0, 7, 4, 0, 0, 0, 5, 0, 0, 8, 3, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 3, 5, 0, 8, 6, 9, 0, 0, 4, 2, 9, 1, 0, 3, 0, 0, 8, 3, 1, 2, 5]];\n  const ActivePuzzle = useState({\n    R1C1: [],\n    R1C2: [],\n    R1C3: [],\n    R2C1: [],\n    R2C2: [],\n    R2C3: [],\n    R3C1: [],\n    R3C2: [],\n    R3C3: []\n  });\n  let GameComponents = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, ActivePuzzle.map(Sector => {\n    return /*#__PURE__*/React.createElement(LogicContainers, {\n      Data: Sector,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    });\n  }));\n  ActivePuzzle.map();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GameStyleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, GameCo));\n};\n\nexport default Game;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/sodukoreact/src/components/Game/Game.js"],"names":["React","useState","useEffect","classes","LogicContainers","GridOverlay","Game","P1","ActivePuzzle","R1C1","R1C2","R1C3","R2C1","R2C2","R2C3","R3C1","R3C2","R3C3","GameComponents","map","Sector","GameStyleContainer","GameContainer","GameCo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,WAAP,MAAyB,8BAAzB;;AACA,MAAMC,IAAI,GAAG,MAAK;AACd,QAAMC,EAAE,GAAG,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,EAA+B,CAA/B,EAAiC,CAAjC,EAAmC,CAAnC,EAAqC,CAArC,EACR,CADQ,EACN,CADM,EACJ,CADI,EACF,CADE,EACA,CADA,EACE,CADF,EACI,CADJ,EACM,CADN,EACQ,CADR,EACU,CADV,EACY,CADZ,EACc,CADd,EACgB,CADhB,EACkB,CADlB,EACoB,CADpB,EACsB,CADtB,EACwB,CADxB,EAC0B,CAD1B,EAC4B,CAD5B,EAC8B,CAD9B,EACgC,CADhC,EACkC,CADlC,EACoC,CADpC,EACsC,CADtC,EAER,CAFQ,EAEN,CAFM,EAEJ,CAFI,EAEF,CAFE,EAEA,CAFA,EAEE,CAFF,EAEI,CAFJ,EAEM,CAFN,EAEQ,CAFR,EAEU,CAFV,EAEY,CAFZ,EAEc,CAFd,EAEgB,CAFhB,EAEkB,CAFlB,EAEoB,CAFpB,EAEsB,CAFtB,EAEwB,CAFxB,EAE0B,CAF1B,EAE4B,CAF5B,EAE8B,CAF9B,EAEgC,CAFhC,EAEkC,CAFlC,EAEoC,CAFpC,EAEsC,CAFtC,EAEwC,CAFxC,EAGR,CAHQ,EAGN,CAHM,EAGJ,CAHI,EAGF,CAHE,EAGA,CAHA,EAGE,CAHF,EAGI,CAHJ,EAGM,CAHN,EAGQ,CAHR,EAGU,CAHV,EAGY,CAHZ,EAGc,CAHd,EAGgB,CAHhB,CAAD,CAAX;AAIA,QAAOC,YAAY,GAAGP,QAAQ,CAAC;AAC3BQ,IAAAA,IAAI,EAAC,EADsB;AACnBC,IAAAA,IAAI,EAAC,EADc;AACXC,IAAAA,IAAI,EAAC,EADM;AAE3BC,IAAAA,IAAI,EAAC,EAFsB;AAEnBC,IAAAA,IAAI,EAAC,EAFc;AAEXC,IAAAA,IAAI,EAAC,EAFM;AAG3BC,IAAAA,IAAI,EAAC,EAHsB;AAGnBC,IAAAA,IAAI,EAAC,EAHc;AAGXC,IAAAA,IAAI,EAAC;AAHM,GAAD,CAA9B;AAKA,MAAIC,cAAc,gBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQV,YAAY,CAACW,GAAb,CAAiBC,MAAM,IAAE;AACrB,wBACI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEA,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJD,CAFR,CADJ;AAWAZ,EAAAA,YAAY,CAACW,GAAb;AACA,sBACI;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACkB,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACmB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,MADL,CAFJ,CADJ;AASH,CA/BD;;AAgCA,eAAejB,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport classes from '../../CSS/GameStyle.module.css';\r\nimport LogicContainers from './GridComponents/LogicContainers';\r\nimport GridOverlay  from './GridComponents/GridOverlay';\r\nconst Game = () =>{\r\n    const P1 = [[0,2,0,9,0,0,5,0,0,9,0,0,1,0,7,0,0,6,0,\r\n        0,4,3,0,0,6,0,0,2,0,8,7,1,9,0,0,0,7,4,0,0,0,5,0,\r\n        0,8,3,0,0,0,6,0,0,0,0,0,1,0,5,0,0,3,5,0,8,6,9,0,0,\r\n        4,2,9,1,0,3,0,0,8,3,1,2,5]]\r\n    const  ActivePuzzle = useState({\r\n        R1C1:[],R1C2:[],R1C3:[],\r\n        R2C1:[],R2C2:[],R2C3:[],\r\n        R3C1:[],R3C2:[],R3C3:[],});\r\n    \r\n    let GameComponents = (\r\n        <div>\r\n            {\r\n                ActivePuzzle.map(Sector=>{\r\n                    return(\r\n                        <LogicContainers Data={Sector}/>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n    ActivePuzzle.map()\r\n    return(\r\n        <div className={classes.GameStyleContainer} >\r\n            <GridOverlay/>\r\n            <div className={classes.GameContainer}>\r\n                {GameCo}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n};\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}
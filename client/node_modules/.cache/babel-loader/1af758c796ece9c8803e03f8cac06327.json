{"ast":null,"code":"import axios from 'axios';\nexport function Login() {}\nexport function Signup(userData) {\n  return new Promise((res, err) => {\n    let defres = {\n      success: false,\n      message: 'Error: Cannot reach signup server'\n    };\n    axios.post('http://localhost:5000/users/signup', userData).then(res => {\n      defres = res.data;\n    });\n    res({\n      defres\n    });\n  });\n}\nexport function Verify(token) {\n  axios.post('http://localhost:5000/users/verify?token=' + token).then(res => res.json()).then(json => {\n    if (json.success) {\n      return token;\n    } else {\n      return false;\n    }\n  });\n}","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/Sudoku-Deploy/src/components/utils/requests.js"],"names":["axios","Login","Signup","userData","Promise","res","err","defres","success","message","post","then","data","Verify","token","json"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,SAASC,KAAT,GAAiB,CAEvB;AACD,OAAO,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AAC7B,SAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAY;AAC3B,QAAIC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAC,KADC;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIAT,IAAAA,KAAK,CAACU,IAAN,CAAW,oCAAX,EAAiDP,QAAjD,EACCQ,IADD,CACMN,GAAG,IAAI;AACTE,MAAAA,MAAM,GAAGF,GAAG,CAACO,IAAb;AACH,KAHD;AAIAP,IAAAA,GAAG,CAAC;AAACE,MAAAA;AAAD,KAAD,CAAH;AACH,GAVM,CAAP;AAYH;AACD,OAAO,SAASM,MAAT,CAAgBC,KAAhB,EAAuB;AAC1Bd,EAAAA,KAAK,CAACU,IAAN,CAAW,8CAA6CI,KAAxD,EACKH,IADL,CACUN,GAAG,IAAIA,GAAG,CAACU,IAAJ,EADjB,EAEKJ,IAFL,CAEUI,IAAI,IAAI;AACV,QAAGA,IAAI,CAACP,OAAR,EAAiB;AACb,aAAOM,KAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ,GARL;AASH","sourcesContent":["import axios from 'axios';\r\nexport function Login() {\r\n\r\n}\r\nexport function Signup(userData) {\r\n    return new Promise((res, err)=>{\r\n        let defres = {\r\n            success:false,\r\n            message: 'Error: Cannot reach signup server'\r\n        }\r\n        axios.post('http://localhost:5000/users/signup', userData)\r\n        .then(res => {\r\n            defres = res.data\r\n        })\r\n        res({defres})\r\n    })\r\n    \r\n}\r\nexport function Verify(token) {\r\n    axios.post('http://localhost:5000/users/verify?token='+ token)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            if(json.success) {\r\n                return token\r\n            } else {\r\n                return false\r\n            }\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}
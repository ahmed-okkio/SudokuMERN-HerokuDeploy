{"ast":null,"code":"var _jsxFileName = \"f:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\Sudoku-Deploy\\\\src\\\\components\\\\Login\\\\LoginHandlingMongo.js\";\nimport React, { useState, useEffect } from 'react';\nimport LoginWindow from './LoginWindow';\nimport { Redirect } from 'react-router-dom';\nimport LoginData from '../../Assets/LoginData.json';\nimport axios from 'axios';\n\nconst LoginHandling = () => {\n  const [user, setUser] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConf, setPasswordConf] = useState('');\n  const [passwordConfError, setPasswordConfError] = useState('');\n  const [userNameError, setuserNameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  let userJSON = {\n    username: username,\n    password: password,\n    score: 0\n  };\n\n  const clearInputs = () => {\n    setUsername('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setuserNameError('');\n    setPasswordError('');\n  };\n\n  const loginHandler = () => {\n    clearErrors('');\n    axios.post('http://localhost:5000/users/add', userJSON).then(res => console.log(res.data)).catch(err => console.log(err));\n  };\n\n  const signupHandler = () => {\n    clearErrors();\n\n    if (password == passwordConf) {} else {\n      setPasswordConfError('Please make sure both passwords match');\n    }\n  };\n\n  const logOutHandler = () => {};\n\n  const authListener = () => {};\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, user ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(LoginWindow, {\n    username: username,\n    setUsername: setUsername,\n    password: password,\n    setPassword: setPassword,\n    setPasswordConf: setPasswordConf,\n    loginHandler: loginHandler,\n    signupHandler: signupHandler,\n    userNameError: userNameError,\n    passwordError: passwordError,\n    passwordConfError: passwordConfError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default LoginHandling;","map":{"version":3,"sources":["f:/Personal Projects/ReactJS+Python Soduko/Main Project/Sudoku-Deploy/src/components/Login/LoginHandlingMongo.js"],"names":["React","useState","useEffect","LoginWindow","Redirect","LoginData","axios","LoginHandling","user","setUser","username","setUsername","password","setPassword","passwordConf","setPasswordConf","passwordConfError","setPasswordConfError","userNameError","setuserNameError","passwordError","setPasswordError","userJSON","score","clearInputs","clearErrors","loginHandler","post","then","res","console","log","data","catch","err","signupHandler","logOutHandler","authListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,iBAAD,EAAoBC,oBAApB,IAA4ChB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,EAAD,CAAlD;AACA,MAAIqB,QAAQ,GAAG;AACXZ,IAAAA,QAAQ,EAAEA,QADC;AAEXE,IAAAA,QAAQ,EAAEA,QAFC;AAGXW,IAAAA,KAAK,EAAE;AAHI,GAAf;;AAMA,QAAMC,WAAW,GAAG,MAAM;AACtBb,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAHD;;AAIA,QAAMY,WAAW,GAAG,MAAM;AACtBN,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH,GAHD;;AAIA,QAAMK,YAAY,GAAG,MAAM;AACvBD,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAnB,IAAAA,KAAK,CAACqB,IAAN,CAAW,iCAAX,EAA6CL,QAA7C,EACCM,IADD,CACMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CADb,EAECC,KAFD,CAEOC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAFd;AAIH,GAND;;AAQA,QAAMC,aAAa,GAAG,MAAM;AACxBV,IAAAA,WAAW;;AACX,QAAGb,QAAQ,IAAIE,YAAf,EAA4B,CAEvB,CAFL,MAGI;AACAG,MAAAA,oBAAoB,CAAC,uCAAD,CAApB;AACH;AACJ,GARD;;AASA,QAAMmB,aAAa,GAAG,MAAM,CAE3B,CAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAGAnC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAGA,sBACI,0CACKM,IAAI,gBACD,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,gBAGD,oBAAC,WAAD;AACI,IAAA,QAAQ,EAAEE,QADd;AAEI,IAAA,WAAW,EAAEC,WAFjB;AAGI,IAAA,QAAQ,EAAEC,QAHd;AAII,IAAA,WAAW,EAAEC,WAJjB;AAKI,IAAA,eAAe,EAAEE,eALrB;AAMI,IAAA,YAAY,EAAEW,YANlB;AAOI,IAAA,aAAa,EAAES,aAPnB;AAQI,IAAA,aAAa,EAAEjB,aARnB;AASI,IAAA,aAAa,EAAEE,aATnB;AAUI,IAAA,iBAAiB,EAAEJ,iBAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CADJ;AAoBH,CApED;;AAqEA,eAAeT,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LoginWindow from './LoginWindow';\r\nimport { Redirect } from 'react-router-dom';\r\nimport LoginData from '../../Assets/LoginData.json'\r\nimport axios from 'axios';\r\n\r\nconst LoginHandling = () => {\r\n    const [user, setUser] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConf, setPasswordConf] = useState('');\r\n    const [passwordConfError, setPasswordConfError] = useState('');\r\n    const [userNameError, setuserNameError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    let userJSON = {\r\n        username: username,\r\n        password: password,\r\n        score: 0\r\n    }\r\n\r\n    const clearInputs = () => {\r\n        setUsername('');\r\n        setPassword('');\r\n    }\r\n    const clearErrors = () => {\r\n        setuserNameError('');\r\n        setPasswordError('');\r\n    }\r\n    const loginHandler = () => {\r\n        clearErrors('');\r\n        axios.post('http://localhost:5000/users/add',userJSON)\r\n        .then(res => console.log(res.data))\r\n        .catch(err => console.log(err));\r\n       \r\n    }\r\n\r\n    const signupHandler = () => {\r\n        clearErrors();\r\n        if(password == passwordConf){\r\n            \r\n            }\r\n        else{\r\n            setPasswordConfError('Please make sure both passwords match')\r\n        }\r\n    }\r\n    const logOutHandler = () => {\r\n\r\n    }\r\n    const authListener = () => {\r\n        \r\n    }\r\n    useEffect(() => {\r\n       \r\n    }, [])\r\n    return (\r\n        <>\r\n            {user ?(\r\n                <Redirect to=\"/\"/>\r\n                ):(\r\n                <LoginWindow\r\n                    username={username}\r\n                    setUsername={setUsername}\r\n                    password={password}\r\n                    setPassword={setPassword}\r\n                    setPasswordConf={setPasswordConf}\r\n                    loginHandler={loginHandler}\r\n                    signupHandler={signupHandler}\r\n                    userNameError={userNameError}\r\n                    passwordError={passwordError}\r\n                    passwordConfError={passwordConfError}\r\n                />)\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default LoginHandling"]},"metadata":{},"sourceType":"module"}
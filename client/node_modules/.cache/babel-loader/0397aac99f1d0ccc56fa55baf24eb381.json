{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\React+Python Project\\\\src\\\\components\\\\Timer\\\\Timer.js\";\nimport React, { useState, useEffect } from 'react';\nimport classes from '../../CSS/Main.module.css';\n\nconst Timer = () => {\n  let timearr = ['00', '00'];\n  const [timer, settimer] = useState({\n    timer: timearr[0] + ':' + timearr[1]\n  });\n\n  const countUp = () => {\n    setInterval(() => {\n      let min = parseInt(timearr[0]);\n      let sec = parseInt(timearr[1]);\n\n      if (sec < 9) {\n        timearr[1] = '0' + (sec + 1).toString();\n      } else if (sec == 59 && min < 9) {\n        timearr[1] = '00';\n        timearr[0] = '0' + (min + 1).toString();\n      } else if (sec == 59 && min > 8) {\n        timearr[1] = '00';\n        timearr[0] = (min + 1).toString();\n      } else {\n        timearr[1] = (sec + 1).toString();\n      }\n\n      settimer({\n        timer: timearr[0] + ':' + timearr[1]\n      });\n      console.log(timer);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    countUp();\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n  console.log(timer);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, timer.timer);\n};\n\nexport default Timer;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/React+Python Project/src/components/Timer/Timer.js"],"names":["React","useState","useEffect","classes","Timer","timearr","timer","settimer","countUp","setInterval","min","parseInt","sec","toString","console","log","clearInterval","interval","current"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,MAAMC,KAAK,GAAG,MAAK;AACf,MAAIC,OAAO,GAAG,CAAC,IAAD,EAAM,IAAN,CAAd;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAE;AAC/BK,IAAAA,KAAK,EAAED,OAAO,CAAC,CAAD,CAAP,GAAW,GAAX,GAAeA,OAAO,CAAC,CAAD;AADE,GAAF,CAAjC;;AAMA,QAAMG,OAAO,GAAG,MAAK;AACjBC,IAAAA,WAAW,CAAC,MAAM;AAGd,UAAIC,GAAG,GAAGC,QAAQ,CAACN,OAAO,CAAC,CAAD,CAAR,CAAlB;AACA,UAAIO,GAAG,GAAGD,QAAQ,CAACN,OAAO,CAAC,CAAD,CAAR,CAAlB;;AACA,UAAGO,GAAG,GAAC,CAAP,EAAS;AACLP,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAY,MAAI,CAACO,GAAG,GAAE,CAAN,EAASC,QAAT,EAAhB;AAEH,OAHD,MAIK,IAAID,GAAG,IAAI,EAAP,IAAYF,GAAG,GAAC,CAApB,EAAsB;AACvBL,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAY,IAAZ;AACAA,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,MAAI,CAACK,GAAG,GAAE,CAAN,EAASG,QAAT,EAAjB;AAEH,OAJI,MAKA,IAAGD,GAAG,IAAI,EAAP,IAAYF,GAAG,GAAC,CAAnB,EAAqB;AACtBL,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAY,IAAZ;AACAA,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAY,CAACK,GAAG,GAAE,CAAN,EAASG,QAAT,EAAZ;AACH,OAHI,MAID;AACAR,QAAAA,OAAO,CAAC,CAAD,CAAP,GAAY,CAACO,GAAG,GAAE,CAAN,EAASC,QAAT,EAAZ;AACH;;AACDN,MAAAA,QAAQ,CAAC;AAACD,QAAAA,KAAK,EAAGD,OAAO,CAAC,CAAD,CAAP,GAAW,GAAX,GAAeA,OAAO,CAAC,CAAD;AAA/B,OAAD,CAAR;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACP,KAxBc,EAwBZ,IAxBY,CAAX;AAyBH,GA1BD;;AA2BAJ,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,OAAO;AACP,WAAM,MAAI;AACNQ,MAAAA,aAAa,CAACC,QAAQ,CAACC,OAAV,CAAb;AACH,KAFD;AAKH,GAPQ,CAAT;AAUAJ,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACA,KAAZ,CADJ;AAGH,CAjDD;;AAmDA,eAAeF,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport classes from '../../CSS/Main.module.css'\r\n\r\nconst Timer = () =>{\r\n    let timearr = ['00','00']\r\n    const [timer,settimer] = useState ({\r\n        timer: timearr[0]+':'+timearr[1]\r\n    })\r\n    \r\n   \r\n    \r\n    const countUp = () =>{\r\n        setInterval(() => {\r\n            \r\n        \r\n            let min = parseInt(timearr[0])\r\n            let sec = parseInt(timearr[1])\r\n            if(sec<9){\r\n                timearr[1] ='0'+(sec+ 1).toString()\r\n\r\n            }\r\n            else if (sec == 59&& min<9){\r\n                timearr[1]= '00'\r\n                timearr[0] = '0'+(min+ 1).toString()\r\n            \r\n            }\r\n            else if(sec == 59&& min>8){\r\n                timearr[1]= '00'\r\n                timearr[0] =(min+ 1).toString()   \r\n            }\r\n            else{\r\n                timearr[1] =(sec+ 1).toString()\r\n            }\r\n            settimer({timer: (timearr[0]+':'+timearr[1])})\r\n            \r\n            console.log(timer)\r\n    }, 1000);\r\n    }\r\n    useEffect(()=>{\r\n        countUp();\r\n        return()=>{\r\n            clearInterval(interval.current)\r\n        }\r\n\r\n\r\n    });\r\n    \r\n\r\n    console.log(timer)\r\n    return(\r\n        <div>{timer.timer}</div>\r\n    )\r\n}\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}
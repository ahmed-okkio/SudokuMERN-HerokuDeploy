{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\React+Python Project\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React, { useState, useEffect } from 'react';\nimport classes from '../../CSS/GameStyle.module.css';\nimport LogicContainers from './GridComponents/LogicContainers';\nimport GridOverlay from './GridComponents/GridOverlay';\nimport InputPad from './GridComponents/Input';\nimport padContext from '../Context/Pad-context';\nimport Solve from './components/Buttons/Solve';\n\nconst Game = () => {\n  const [Padstate, setPadstate] = useState({\n    showPad: false,\n    Xcoords: null,\n    Ycoords: null,\n    cellindex: null\n  });\n\n  const ClosePad = () => {\n    setPadstate({\n      showPad: false\n    });\n  };\n\n  const PadHandler = (event, stat, Sector, index) => {\n    if (Padstate.showPad || stat == \"static\") {\n      setPadstate({\n        showPad: false\n      });\n    } else {\n      setPadstate({\n        showPad: true,\n        Xcoords: event.clientX,\n        Ycoords: event.clientY,\n        cellindex: index,\n        Sector: Sector\n      });\n    }\n  };\n\n  const InputHandler = padinput => {\n    let Tempstate = ActivePuzzle;\n    console.log(padinput.toString());\n    Tempstate[Padstate.Sector][Padstate.cellindex] = padinput.toString();\n    SetPuzzle(Tempstate);\n    setPadstate({\n      showPad: false\n    });\n  };\n\n  let inputmenu = null;\n\n  if (Padstate.showPad) {\n    inputmenu = /*#__PURE__*/React.createElement(InputPad, {\n      InputHandler: InputHandler,\n      Ycoords: Padstate.Ycoords,\n      Xcoords: Padstate.Xcoords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    });\n  }\n\n  const P1 = [[0, 2, 0, 9, 0, 0, 5, 0, 0, 9, 0, 0, 1, 0, 7, 0, 0, 6, 0, 0, 4, 3, 0, 0, 6, 0, 0, 2, 0, 8, 7, 1, 9, 0, 0, 0, 7, 4, 0, 0, 0, 5, 0, 0, 8, 3, 0, 0, 0, 6, 0, 0, 0, 0, 0, 1, 0, 5, 0, 0, 3, 5, 0, 8, 6, 9, 0, 0, 4, 2, 9, 1, 0, 3, 0, 0, 8, 3, 1, 2, 5]];\n  const [ActivePuzzle, SetPuzzle] = useState({\n    R1C1: [0, 2, 0, 9, 0, 0, 5, 0, 0],\n    R1C2: [0, 2, 0, 9, 0, null, 5, 0, 0],\n    R1C3: [0, 2, 0, 9, 0, 0, null, 0, 0],\n    R2C1: [0, 2, 0, 9, 0, 0, null, 0, 0],\n    R2C2: [0, 2, 0, 9, 0, 0, 5, 0, 0],\n    R2C3: [0, 2, 0, null, 0, 0, 5, 0, 0],\n    R3C1: [0, 2, 0, 9, 0, 0, 5, 0, null],\n    R3C2: [0, 2, 0, 9, 0, 0, 5, 0, 0],\n    R3C3: [0, null, 0, 9, 0, 0, 5, 0, 0]\n  });\n  const [gameState, setgameState] = useState({\n    startGame: false\n  });\n\n  const gameHandler = () => {\n    let tempstate = gameState.startGame;\n    setgameState({\n      startGame: !tempstate\n    });\n  };\n\n  let GameComponents = null;\n\n  if (gameState.startGame) {\n    GameComponents = /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.GameComp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, Object.keys(ActivePuzzle).map((Sector, key) => {\n      return /*#__PURE__*/React.createElement(LogicContainers, Object.assign({}, Padstate, {\n        PadHandler: PadHandler,\n        Data: ActivePuzzle[Sector],\n        Sector: Sector,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }));\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Solve, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GameStyleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(padContext.Provider, {\n    value: {\n      showPad: Padstate.showPad,\n      PadHandler: PadHandler\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, GameComponents))), inputmenu, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: gameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Game;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/React+Python Project/src/components/Game/Game.js"],"names":["React","useState","useEffect","classes","LogicContainers","GridOverlay","InputPad","padContext","Solve","Game","Padstate","setPadstate","showPad","Xcoords","Ycoords","cellindex","ClosePad","PadHandler","event","stat","Sector","index","clientX","clientY","InputHandler","padinput","Tempstate","ActivePuzzle","console","log","toString","SetPuzzle","inputmenu","P1","R1C1","R1C2","R1C3","R2C1","R2C2","R2C3","R3C1","R3C2","R3C3","gameState","setgameState","startGame","gameHandler","tempstate","GameComponents","GameComp","Object","keys","map","key","GameStyleContainer","GameContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport classes from '../../CSS/GameStyle.module.css';\r\nimport LogicContainers from './GridComponents/LogicContainers';\r\nimport GridOverlay  from './GridComponents/GridOverlay';\r\nimport InputPad from './GridComponents/Input';\r\nimport padContext from '../Context/Pad-context';\r\nimport Solve from './components/Buttons/Solve';\r\nconst Game = () =>{\r\n    const [Padstate,setPadstate] = useState({\r\n        showPad:false,\r\n        Xcoords: null,\r\n        Ycoords:null,\r\n        cellindex: null\r\n    })\r\n    const ClosePad = () =>{\r\n        setPadstate({\r\n            showPad:false\r\n        })\r\n    }\r\n    const PadHandler =(event, stat, Sector,index)=>{\r\n        if(Padstate.showPad||stat==\"static\"){\r\n            setPadstate({\r\n                showPad:false\r\n            });\r\n        }\r\n        else{    \r\n            setPadstate({\r\n                showPad:true,\r\n                Xcoords: event.clientX,\r\n                Ycoords: event.clientY,\r\n                cellindex: index,\r\n                Sector: Sector\r\n            })\r\n        }\r\n    }\r\n    const InputHandler=(padinput)=>{\r\n        let Tempstate = ActivePuzzle\r\n        console.log(padinput.toString())\r\n        Tempstate[Padstate.Sector][Padstate.cellindex]= padinput.toString()\r\n\r\n        SetPuzzle(Tempstate)\r\n        setPadstate({\r\n            showPad:false\r\n        })\r\n \r\n    }\r\n    let inputmenu = null;\r\n    if(Padstate.showPad){\r\n        inputmenu = (\r\n        <InputPad InputHandler={InputHandler}Ycoords={Padstate.Ycoords} Xcoords={Padstate.Xcoords}/>\r\n        );\r\n    }\r\n    const P1 = [[0,2,0,9,0,0,5,0,0,9,0,0,1,0,7,0,0,6,0,\r\n        0,4,3,0,0,6,0,0,2,0,8,7,1,9,0,0,0,7,4,0,0,0,5,0,\r\n        0,8,3,0,0,0,6,0,0,0,0,0,1,0,5,0,0,3,5,0,8,6,9,0,0,\r\n        4,2,9,1,0,3,0,0,8,3,1,2,5]]\r\n        \r\n    \r\n\r\n\r\n    const  [ActivePuzzle,SetPuzzle] = useState({\r\n        R1C1:[0,2,0,9,0,0,5,0,0],R1C2:[0,2,0,9,0,null,5,0,0],R1C3:[0,2,0,9,0,0,null,0,0],\r\n        R2C1:[0,2,0,9,0,0,null,0,0],R2C2:[0,2,0,9,0,0,5,0,0],R2C3:[0,2,0,null,0,0,5,0,0],\r\n        R3C1:[0,2,0,9,0,0,5,0,null],R3C2:[0,2,0,9,0,0,5,0,0],R3C3:[0,null,0,9,0,0,5,0,0],});\r\n    const [gameState,setgameState] = useState({\r\n        startGame:false\r\n    })\r\n    const gameHandler =()=>{\r\n       let tempstate = gameState.startGame\r\n       setgameState({\r\n           startGame: !tempstate\r\n       })\r\n    }\r\n    let GameComponents = null;\r\n    if(gameState.startGame){\r\n     GameComponents = (\r\n        <div className={classes.GameComp}>\r\n            {Object.keys(ActivePuzzle).map((Sector,key)=>{\r\n                return(\r\n                    <LogicContainers {...Padstate} PadHandler={PadHandler}Data={ActivePuzzle[Sector]} Sector={Sector}key={key}/>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n    }\r\n    return(\r\n        <div >\r\n            <Solve></Solve>\r\n            <div className={classes.GameStyleContainer} >\r\n                <GridOverlay/>\r\n                <padContext.Provider value={{showPad: Padstate.showPad, PadHandler:PadHandler}}>\r\n                <div className={classes.GameContainer}>\r\n                    {GameComponents}\r\n                </div>\r\n                </padContext.Provider>\r\n            </div>\r\n            {inputmenu}\r\n            <button onClick={gameHandler}></button>\r\n        </div>\r\n    )\r\n};\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\React+Python Project\\\\src\\\\components\\\\Game\\\\GridComponents\\\\LogicContainers.js\";\nimport React, { useState, useEffect } from 'react';\nimport classes from '../../../CSS/GameStyle.module.css';\nimport InputPad from './Input';\nimport padContext from '../../Context/Pad-context';\n\nconst LogicContainers = props => {\n  const [Padstate, setPadstate] = useState({\n    showPad: false,\n    Xcoords: null,\n    Ycoords: null\n  });\n  let inputmenu = null;\n  useEffect();\n\n  if (props.showPad) {\n    inputmenu = /*#__PURE__*/React.createElement(InputPad, {\n      Ycoords: Padstate.Ycoords,\n      Xcoords: Padstate.Xcoords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    });\n  }\n\n  let pushpuzzle = /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.GameComp,\n    onClick: props.Onclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, props.Data.map((val, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      id: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, val);\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, pushpuzzle, inputmenu);\n};\n\nexport default LogicContainers;\n{\n  /* <input type=\"text\" pattern=\"[1-9]\"maxLength=\"1\" required></input> */\n}","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/React+Python Project/src/components/Game/GridComponents/LogicContainers.js"],"names":["React","useState","useEffect","classes","InputPad","padContext","LogicContainers","props","Padstate","setPadstate","showPad","Xcoords","Ycoords","inputmenu","pushpuzzle","GameComp","Onclick","Data","map","val","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAG;AAC5B,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBR,QAAQ,CAAC;AACpCS,IAAAA,OAAO,EAAC,KAD4B;AAEpCC,IAAAA,OAAO,EAAE,IAF2B;AAGpCC,IAAAA,OAAO,EAAC;AAH4B,GAAD,CAAvC;AAKA,MAAIC,SAAS,GAAG,IAAhB;AACAX,EAAAA,SAAS;;AAET,MAAGK,KAAK,CAACG,OAAT,EAAiB;AACbG,IAAAA,SAAS,gBACT,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEL,QAAQ,CAACI,OAA5B;AAAqC,MAAA,OAAO,EAAEJ,QAAQ,CAACG,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAGH;;AAED,MAAIG,UAAU,gBACV;AAAI,IAAA,SAAS,EAAEX,OAAO,CAACY,QAAvB;AAAiC,IAAA,OAAO,EAAER,KAAK,CAACS,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACU,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAKC,KAAL,KAAa;AAEzB,wBACA;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,MAAA,EAAE,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BD,GAA7B,CADA;AAGH,GALA,CADL,CADJ;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,UADL,EAEKD,SAFL,CADJ;AAOH,CAhCD;;AAiCA,eAAeP,eAAf;AACA;AAAC;AAAwE","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport classes from '../../../CSS/GameStyle.module.css'\r\nimport InputPad from './Input';\r\nimport padContext from '../../Context/Pad-context';\r\nconst LogicContainers = props =>{\r\n    const [Padstate,setPadstate] = useState({\r\n        showPad:false,\r\n        Xcoords: null,\r\n        Ycoords:null\r\n    })\r\n    let inputmenu = null;\r\n    useEffect()\r\n   \r\n    if(props.showPad){\r\n        inputmenu = (\r\n        <InputPad Ycoords={Padstate.Ycoords} Xcoords={Padstate.Xcoords}/>\r\n        );\r\n    }\r\n    \r\n    let pushpuzzle = (\r\n        <ul className={classes.GameComp} onClick={props.Onclick}>\r\n            {props.Data.map((val,index)=>{\r\n                \r\n                return(\r\n                <li key={index} id={index} >{val}</li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n    return(\r\n        <div>\r\n            {pushpuzzle}\r\n            {inputmenu}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default LogicContainers;\r\n{/* <input type=\"text\" pattern=\"[1-9]\"maxLength=\"1\" required></input> */}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\React+Python Project\\\\src\\\\components\\\\Game\\\\GridComponents\\\\LogicContainers.js\";\nimport React, { useState } from 'react';\nimport classes from '../../../CSS/GameStyle.module.css';\nimport InputPad from './GridComponents/Input';\n\nconst LogicContainers = props => {\n  const [Padstate, setPadstate] = useState({\n    showPad: false,\n    Xcoords: null,\n    Ycoords: null\n  });\n  let inputmenu = null;\n\n  const InputClick = event => {\n    if (Padstate.showPad) {\n      setPadstate({\n        showPad: false\n      });\n    } else {\n      setPadstate({\n        showPad: true,\n        Xcoords: event.clientX,\n        Ycoords: event.clientY\n      });\n    }\n  };\n\n  if (Padstate.showPad) {\n    inputmenu = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputPad, {\n      Ycoords: Padstate.Ycoords,\n      Xcoords: Padstate.Xcoords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }\n    }));\n  }\n\n  let pushpuzzle = /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.GameComp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, props.Data.map((val, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      id: index,\n      onMouseDown: InputClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, val);\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, pushpuzzle, inputmenu);\n};\n\nexport default LogicContainers;\n{\n  /* <input type=\"text\" pattern=\"[1-9]\"maxLength=\"1\" required></input> */\n}","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/React+Python Project/src/components/Game/GridComponents/LogicContainers.js"],"names":["React","useState","classes","InputPad","LogicContainers","props","Padstate","setPadstate","showPad","Xcoords","Ycoords","inputmenu","InputClick","event","clientX","clientY","pushpuzzle","GameComp","Data","map","val","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAG;AAC5B,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAAC;AACpCO,IAAAA,OAAO,EAAC,KAD4B;AAEpCC,IAAAA,OAAO,EAAE,IAF2B;AAGpCC,IAAAA,OAAO,EAAC;AAH4B,GAAD,CAAvC;AAKA,MAAIC,SAAS,GAAG,IAAhB;;AACA,QAAMC,UAAU,GAAGC,KAAD,IAAS;AACvB,QAAGP,QAAQ,CAACE,OAAZ,EAAoB;AAChBD,MAAAA,WAAW,CAAC;AACRC,QAAAA,OAAO,EAAC;AADA,OAAD,CAAX;AAGH,KAJD,MAKI;AACAD,MAAAA,WAAW,CAAC;AACRC,QAAAA,OAAO,EAAC,IADA;AAERC,QAAAA,OAAO,EAAEI,KAAK,CAACC,OAFP;AAGRJ,QAAAA,OAAO,EAAEG,KAAK,CAACE;AAHP,OAAD,CAAX;AAKH;AACJ,GAbD;;AAeA,MAAGT,QAAQ,CAACE,OAAZ,EAAoB;AAChBG,IAAAA,SAAS,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEL,QAAQ,CAACI,OAA5B;AAAqC,MAAA,OAAO,EAAEJ,QAAQ,CAACG,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADA;AAGH;;AAED,MAAIO,UAAU,gBACV;AAAI,IAAA,SAAS,EAAEd,OAAO,CAACe,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,KAAK,CAACa,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAKC,KAAL,KAAa;AAEzB,wBACA;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,MAAA,EAAE,EAAEA,KAApB;AAA2B,MAAA,WAAW,EAAET,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDQ,GAArD,CADA;AAGH,GALA,CADL,CADJ;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,UADL,EAEKL,SAFL,CADJ;AAOH,CA7CD;;AA8CA,eAAeP,eAAf;AACA;AAAC;AAAwE","sourcesContent":["import React, {useState} from 'react';\r\nimport classes from '../../../CSS/GameStyle.module.css'\r\nimport InputPad from './GridComponents/Input';\r\nconst LogicContainers = props =>{\r\n    const [Padstate,setPadstate] = useState({\r\n        showPad:false,\r\n        Xcoords: null,\r\n        Ycoords:null\r\n    })\r\n    let inputmenu = null;\r\n    const InputClick =(event)=>{\r\n        if(Padstate.showPad){\r\n            setPadstate({\r\n                showPad:false\r\n            });\r\n        }\r\n        else{    \r\n            setPadstate({\r\n                showPad:true,\r\n                Xcoords: event.clientX,\r\n                Ycoords: event.clientY\r\n            })\r\n        }\r\n    }\r\n   \r\n    if(Padstate.showPad){\r\n        inputmenu = (\r\n        <div><InputPad Ycoords={Padstate.Ycoords} Xcoords={Padstate.Xcoords}/></div>\r\n        );\r\n    }\r\n    \r\n    let pushpuzzle = (\r\n        <ul className={classes.GameComp}>\r\n            {props.Data.map((val,index)=>{\r\n                \r\n                return(\r\n                <li key={index} id={index} onMouseDown={InputClick}>{val}</li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n    return(\r\n        <div>\r\n            {pushpuzzle}\r\n            {inputmenu}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default LogicContainers;\r\n{/* <input type=\"text\" pattern=\"[1-9]\"maxLength=\"1\" required></input> */}"]},"metadata":{},"sourceType":"module"}
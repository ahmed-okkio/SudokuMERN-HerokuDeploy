{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\React+Python Project\\\\src\\\\components\\\\Game\\\\Game.js\";\nimport React, { useState, useEffect } from 'react';\nimport classes from '../../CSS/GameStyle.module.css';\nimport LogicContainers from './GridComponents/LogicContainers';\nimport GridOverlay from './GridComponents/GridOverlay';\nimport InputPad from './GridComponents/Input';\nimport padContext from '../Context/Pad-context';\nimport Solve from '../Buttons/Solve';\nimport Finish from '../Buttons/Finish';\nimport puzzleData from '../../Assets/data.json';\nimport fire from '../Login/fire';\nimport { useHistory } from 'react-router-dom';\n\nconst Game = props => {\n  const [Padstate, setPadstate] = useState({\n    showPad: false,\n    Xcoords: null,\n    Ycoords: null,\n    cellindex: null\n  });\n  const [ActivePuzzle, SetPuzzle] = useState({\n    R1: [null, null, null, null, null, null, null, null, null],\n    R2: [null, null, null, null, null, null, null, null, null],\n    R3: [null, null, null, null, null, null, null, null, null],\n    R4: [null, null, null, null, null, null, null, null, null],\n    R5: [null, null, null, null, null, null, null, null, null],\n    R6: [null, null, null, null, null, null, null, null, null],\n    R7: [null, null, null, null, null, null, null, null, null],\n    R8: [null, null, null, null, null, null, null, null, null],\n    R9: [null, null, null, null, null, null, null, null, null]\n  });\n  const [puzzCompState, setPuzzComp] = useState({\n    complete: 0\n  });\n  const [triggerCheck, setTrigger] = useState({\n    trigger: false,\n    state: false\n  });\n\n  const puzzleFinish = () => {\n    let temp = 0;\n    Object.keys(ActivePuzzle).map((Sector, key) => {\n      for (let i = 0; i < ActivePuzzle[Sector].length; i++) {\n        let row = ActivePuzzle[Sector][i];\n\n        if (row !== 0 && row !== null) {\n          temp++;\n        }\n      }\n    });\n    setPuzzComp({\n      complete: temp\n    });\n    let temp2 = triggerCheck.trigger;\n    setTrigger({\n      trigger: !temp2,\n      state: true\n    });\n  };\n\n  const PadHandler = (event, stat, Sector, index) => {\n    if (Padstate.showPad || stat == \"static\") {\n      setPadstate({\n        showPad: false\n      });\n    } else {\n      setPadstate({\n        showPad: true,\n        Xcoords: event.clientX,\n        Ycoords: event.clientY,\n        cellindex: index,\n        Sector: Sector\n      });\n    }\n  };\n\n  const InputHandler = padinput => {\n    let Tempstate = ActivePuzzle;\n    Tempstate[Padstate.Sector][Padstate.cellindex] = padinput.toString();\n    SetPuzzle(Tempstate);\n    setPadstate({\n      showPad: false\n    });\n  };\n\n  let history = useHistory();\n\n  const endPuzzle = () => {\n    useEffect(() => {\n      props.gameHandler();\n      fire.auth().onAuthStateChanged(user => {\n        return fire.firestore().collection('user').doc(user.uid).set({\n          score: 1000 / props.score\n        });\n      });\n      console.log(\"score2:\" + props.score);\n    }, [props.score]);\n  };\n\n  let inputmenu = null;\n\n  if (Padstate.showPad) {\n    inputmenu = /*#__PURE__*/React.createElement(InputPad, {\n      InputHandler: InputHandler,\n      Ycoords: Padstate.Ycoords,\n      Xcoords: Padstate.Xcoords,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    });\n  }\n\n  let GameComponents = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, Object.keys(ActivePuzzle).map((Sector, key) => {\n    return /*#__PURE__*/React.createElement(LogicContainers, Object.assign({\n      start: props.gameState\n    }, Padstate, {\n      PadHandler: PadHandler,\n      Data: ActivePuzzle[Sector],\n      Sector: Sector,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }));\n  }));\n\n  const PuzzleLoader = () => {\n    let tempcounter = 0;\n    let RawPuzzle = null;\n    let i = Math.floor(Math.random() * 500 + 1);\n    RawPuzzle = \"864371259325849761971265843436192587198657432257483916689734125713528694542916378\";\n    let PuzzProcess = RawPuzzle.split(\"\");\n    let ReadyPuzz = {\n      R1: [],\n      R2: [],\n      R3: [],\n      R4: [],\n      R5: [],\n      R6: [],\n      R7: [],\n      R8: [],\n      R9: []\n    };\n\n    for (let n = 1; n < 10; n++) {\n      for (let i = 0; i < 9; i++) {\n        ReadyPuzz[\"R\" + n].push(parseInt(PuzzProcess[tempcounter]));\n        tempcounter++;\n      }\n    }\n\n    SetPuzzle(ReadyPuzz);\n  };\n\n  useEffect(() => {\n    if (props.gameState) {\n      PuzzleLoader();\n    }\n  }, [props.gameState]);\n  console.log(\"score:\" + props.score);\n  let StartFin = /*#__PURE__*/React.createElement(Solve, {\n    onClick: props.gameHandler,\n    gameState: props.gameState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 20\n    }\n  });\n\n  if (props.gameState) {\n    StartFin = /*#__PURE__*/React.createElement(Finish, {\n      onClick: puzzleFinish,\n      endPuzzle: endPuzzle,\n      triggstate: triggerCheck.state,\n      trigger: triggerCheck.trigger,\n      puzzleComplete: puzzCompState.complete,\n      Puzzle: ActivePuzzle,\n      score: props.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GameStyleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GridOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(padContext.Provider, {\n    value: {\n      showPad: Padstate.showPad,\n      PadHandler: PadHandler\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.GameContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, GameComponents))), inputmenu, StartFin);\n};\n\nexport default Game;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/React+Python Project/src/components/Game/Game.js"],"names":["React","useState","useEffect","classes","LogicContainers","GridOverlay","InputPad","padContext","Solve","Finish","puzzleData","fire","useHistory","Game","props","Padstate","setPadstate","showPad","Xcoords","Ycoords","cellindex","ActivePuzzle","SetPuzzle","R1","R2","R3","R4","R5","R6","R7","R8","R9","puzzCompState","setPuzzComp","complete","triggerCheck","setTrigger","trigger","state","puzzleFinish","temp","Object","keys","map","Sector","key","i","length","row","temp2","PadHandler","event","stat","index","clientX","clientY","InputHandler","padinput","Tempstate","toString","history","endPuzzle","gameHandler","auth","onAuthStateChanged","user","firestore","collection","doc","uid","set","score","console","log","inputmenu","GameComponents","gameState","PuzzleLoader","tempcounter","RawPuzzle","Math","floor","random","PuzzProcess","split","ReadyPuzz","n","push","parseInt","StartFin","GameStyleContainer","GameContainer"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport classes from '../../CSS/GameStyle.module.css';\r\nimport LogicContainers from './GridComponents/LogicContainers';\r\nimport GridOverlay  from './GridComponents/GridOverlay';\r\nimport InputPad from './GridComponents/Input';\r\nimport padContext from '../Context/Pad-context';\r\nimport Solve from '../Buttons/Solve';\r\nimport Finish from'../Buttons/Finish';\r\nimport puzzleData from '../../Assets/data.json';\r\nimport fire from '../Login/fire';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Game = (props) =>{\r\n    const [Padstate,setPadstate] = useState({\r\n        showPad:false,\r\n        Xcoords: null,\r\n        Ycoords:null,\r\n        cellindex: null\r\n    })\r\n    const  [ActivePuzzle,SetPuzzle] = useState({\r\n        R1:[null,null,null,null,null,null,null,null,null],\r\n        R2:[null,null,null,null,null,null,null,null,null],\r\n        R3:[null,null,null,null,null,null,null,null,null],\r\n        R4:[null,null,null,null,null,null,null,null,null],\r\n        R5:[null,null,null,null,null,null,null,null,null],\r\n        R6:[null,null,null,null,null,null,null,null,null],\r\n        R7:[null,null,null,null,null,null,null,null,null],\r\n        R8:[null,null,null,null,null,null,null,null,null],\r\n        R9:[null,null,null,null,null,null,null,null,null]});\r\n    const [puzzCompState,setPuzzComp] = useState({complete:0})\r\n    const [triggerCheck,setTrigger] = useState({trigger:false,\r\n    state:false})\r\n    const puzzleFinish =()=>{\r\n        let temp = 0\r\n        Object.keys(ActivePuzzle).map((Sector,key)=>{\r\n            for(let i = 0;i<ActivePuzzle[Sector].length;i++){\r\n                let row = ActivePuzzle[Sector][i]\r\n                if(row !== 0 && row !== null){\r\n                    temp++\r\n                    \r\n                }\r\n            }\r\n        })\r\n        setPuzzComp({complete:temp})\r\n        let temp2 = triggerCheck.trigger\r\n        setTrigger({trigger:!temp2,\r\n            state:true\r\n        })\r\n    }  \r\n    const PadHandler =(event, stat, Sector,index)=>{\r\n        if(Padstate.showPad||stat==\"static\"){\r\n            setPadstate({\r\n                showPad:false\r\n            });\r\n        }\r\n        else{    \r\n            setPadstate({\r\n                showPad:true,\r\n                Xcoords: event.clientX,\r\n                Ycoords: event.clientY,\r\n                cellindex: index,\r\n                Sector: Sector\r\n            })\r\n        }\r\n    }\r\n    const InputHandler=(padinput)=>{\r\n        let Tempstate = ActivePuzzle\r\n        Tempstate[Padstate.Sector][Padstate.cellindex]= padinput.toString()\r\n\r\n        SetPuzzle(Tempstate)\r\n        setPadstate({\r\n            showPad:false\r\n        })\r\n \r\n    }\r\n    let history = useHistory();\r\n    const endPuzzle=()=>{\r\n        useEffect(()=>{\r\n            props.gameHandler()\r\n            \r\n            fire.auth().onAuthStateChanged(user => {\r\n                return fire.firestore().collection('user').doc(user.uid).set({\r\n                    score:(1000 / props.score)});\r\n                    \r\n            })\r\n            \r\n            console.log(\"score2:\"+props.score)\r\n        },[props.score])\r\n    }\r\n    let inputmenu = null;\r\n    if(Padstate.showPad){\r\n        inputmenu = (\r\n        <InputPad InputHandler={InputHandler}Ycoords={Padstate.Ycoords} Xcoords={Padstate.Xcoords}/>\r\n        );\r\n    }\r\n    \r\n    \r\n    \r\n    let   GameComponents = (\r\n        <div >\r\n            {Object.keys(ActivePuzzle).map((Sector,key)=>{\r\n                return(\r\n                    <LogicContainers start={props.gameState} {...Padstate} PadHandler={PadHandler}Data={ActivePuzzle[Sector]} Sector={Sector}key={key}/>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n    const PuzzleLoader = ()=>{\r\n        let tempcounter = 0\r\n        let RawPuzzle  = null;\r\n        let i = Math.floor((Math.random() * 500) + 1)\r\n        RawPuzzle = \"864371259325849761971265843436192587198657432257483916689734125713528694542916378\"\r\n        let PuzzProcess = RawPuzzle.split(\"\")\r\n        let ReadyPuzz ={\r\n            R1:[],\r\n            R2:[],\r\n            R3:[],\r\n            R4:[],\r\n            R5:[],\r\n            R6:[],\r\n            R7:[],\r\n            R8:[],\r\n            R9:[]}  \r\n        for(let n = 1; n <10;n++){    \r\n            for(let i =0;i<9;i++){\r\n                ReadyPuzz[\"R\"+n].push(parseInt(PuzzProcess[tempcounter]))\r\n                tempcounter++ \r\n              }           \r\n          }\r\n        SetPuzzle(ReadyPuzz)\r\n    }\r\n    useEffect(()=>{\r\n        if(props.gameState){\r\n        PuzzleLoader()\r\n    }\r\n    \r\n    },[props.gameState])\r\n    console.log(\"score:\"+props.score)\r\n    let StartFin = <Solve onClick={props.gameHandler} gameState={props.gameState}></Solve>\r\n    if(props.gameState){\r\n      StartFin= <Finish \r\n        onClick={puzzleFinish}\r\n        endPuzzle={endPuzzle}\r\n        triggstate={triggerCheck.state}\r\n        trigger={triggerCheck.trigger}\r\n        puzzleComplete={puzzCompState.complete}\r\n        Puzzle={ActivePuzzle}\r\n        score={props.score}/>\r\n    }\r\n    return(\r\n        <div >\r\n            \r\n            <div className={classes.GameStyleContainer} >\r\n                <GridOverlay/>\r\n                <padContext.Provider value={{showPad: Padstate.showPad, PadHandler:PadHandler}}>\r\n                <div className={classes.GameContainer}>\r\n                    {GameComponents}\r\n                </div>\r\n                </padContext.Provider>\r\n            </div>\r\n            {inputmenu}\r\n            {StartFin}\r\n        </div>\r\n    )\r\n};\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}
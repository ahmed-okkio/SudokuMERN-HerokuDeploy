{"ast":null,"code":"var _jsxFileName = \"F:\\\\Personal Projects\\\\ReactJS+Python Soduko\\\\Main Project\\\\React+Python Project\\\\src\\\\components\\\\Game\\\\Solver.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst Solver = () => {\n  let Sector = null;\n  let Rows = null;\n  const Puzzle = {\n    R1: [],\n    R2: [],\n    R3: [],\n    R4: [],\n    R5: [],\n    R6: [],\n    R7: [],\n    R8: [],\n    R9: []\n  }; // Object.keys(Puzzle).map((Sector,key)=>{\n  //     for(let i = 0;i<3;i++){\n  //         SolvedPuzzle[0].push(Puzzle[Sector][i])\n  //     }\n  // })\n\n  const solvePuzzle = () => {\n    let dupeCheck = [];\n\n    for (let n = 1; n < 10; n++) {\n      //Horizontal Check\n      for (let i = 0; i < 9; i++) {\n        for (let m = i + 1; m < 9; m++) {\n          if (Puzzle[\"R\" + n][i] == Puzzle[\"R\" + n][m]) {\n            // console.log(Puzzle[\"R\" + n][i], Puzzle[\"R\" + n][m])  \n            return false;\n          }\n        }\n      }\n    } //\n\n\n    for (let i = 0; i < 9; i++) {\n      //Vertical Check     \n      for (let n = 1; n < 9; n++) {\n        for (let m = n + 1; m < 9; m++) {\n          if (Puzzle[\"R\" + n][i] == Puzzle[\"R\" + m][i]) {\n            // console.log(Puzzle[\"R\" + n][i], Puzzle[\"R\" + (m)][i])\n            return false;\n          }\n        }\n      }\n    } //\n\n\n    for (let t = 0; t < 7; t++) {\n      //SubGrid Check\n      for (let n = 1; n < 4; n++) {\n        for (let p = 0; p < 3; p++) {\n          for (let i = 1; i < 4; i++) {\n            for (let m = 0; m < 3; m++) {\n              // console.log(\"Puzzle[R\" + (n + t) + \"][\" + p + \"]\" + \"==\" + \"Puzzle[R\" + i + \"][\" + m + \"]\")\n              if (Puzzle[\"R\" + (n + t)][p + t] == Puzzle[\"R\" + (i + t)][m]) {\n                dupeCheck.push(Puzzle[\"R\" + i][m]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (dupeCheck.length !== 9) {\n      return false;\n    }\n  }; //\n\n\n  solvePuzzle();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Solver;","map":{"version":3,"sources":["F:/Personal Projects/ReactJS+Python Soduko/Main Project/React+Python Project/src/components/Game/Solver.js"],"names":["React","useState","useEffect","Solver","Sector","Rows","Puzzle","R1","R2","R3","R4","R5","R6","R7","R8","R9","solvePuzzle","dupeCheck","n","i","m","t","p","push","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst Solver = () => {\n    let Sector = null;\n    let Rows = null;\n    const Puzzle = {\n        R1: [],\n        R2: [],\n        R3: [],\n        R4: [],\n        R5: [],\n        R6: [],\n        R7: [],\n        R8: [],\n        R9: []\n    }\n    // Object.keys(Puzzle).map((Sector,key)=>{\n    //     for(let i = 0;i<3;i++){\n    //         SolvedPuzzle[0].push(Puzzle[Sector][i])\n    //     }\n\n\n    // })\n    const solvePuzzle = () => {\n        let dupeCheck = []\n        for (let n = 1; n < 10; n++) {                                          //Horizontal Check\n            for (let i = 0; i < 9; i++) {\n                for (let m = i + 1; m < 9; m++) {                      \n                    if (Puzzle[\"R\" + n][i] == Puzzle[\"R\" + n][m]) {\n                        // console.log(Puzzle[\"R\" + n][i], Puzzle[\"R\" + n][m])  \n                        return false;             \n                    }\n                }\n            }\n        }                                                                      //\n        for (let i = 0; i < 9; i++) {                                          //Vertical Check     \n            for (let n = 1; n < 9; n++) {\n                for (let m = n + 1; m < 9; m++) {\n                    if (Puzzle[\"R\" + n][i] == Puzzle[\"R\" + (m)][i]) {\n                        // console.log(Puzzle[\"R\" + n][i], Puzzle[\"R\" + (m)][i])\n                        return false;\n                    }\n                }\n            }\n        }                                                                      //\n        for (let t = 0; t < 7; t++) {                                                                                           //SubGrid Check\n            for (let n = 1; n < 4; n++) {\n                for (let p = 0; p < 3; p++) {\n                    for (let i = 1; i < 4; i++) {\n                        for (let m = 0; m < 3; m++) {\n                            // console.log(\"Puzzle[R\" + (n + t) + \"][\" + p + \"]\" + \"==\" + \"Puzzle[R\" + i + \"][\" + m + \"]\")\n                            if (Puzzle[\"R\" + (n + t)][p + t] == Puzzle[\"R\" + (i + t)][m]) {\n                                dupeCheck.push(Puzzle[\"R\" + i][m])\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (dupeCheck.length !== 9) {\n            return false;\n        }\n    }                                                                               //\n\n    solvePuzzle()\n    return (\n        <div></div>\n    )\n}\nexport default Solver"]},"metadata":{},"sourceType":"module"}